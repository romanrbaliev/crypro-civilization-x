
import { GameState } from '@/context/types';
import { unlockableItemsRegistry } from './registry';
import { UnlockCondition, UnlockableItem } from './types';
import { safeDispatchGameEvent } from '@/context/utils/eventBusUtils';

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ - —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º–∏ –≤ –∏–≥—Ä–µ
 */
export class UnlockManager {
  private gameState: GameState;
  private debugMode: boolean;
  private steps: string[] = [];

  constructor(gameState: GameState, debugMode: boolean = false) {
    this.gameState = gameState;
    this.debugMode = debugMode;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
   */
  private checkCondition(condition: UnlockCondition): boolean {
    if (this.debugMode) {
      this.steps.push(`‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è: ${condition.description}`);
    }

    switch (condition.type) {
      case 'resource':
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–∞
        const resource = this.gameState.resources[condition.targetId];
        if (!resource) {
          if (this.debugMode) this.steps.push(`  ‚Ä¢ –†–µ—Å—É—Ä—Å ${condition.targetId} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
          return false;
        }
        
        if (condition.operator === 'gte') {
          const result = resource.value >= condition.targetValue;
          if (this.debugMode) {
            this.steps.push(`  ‚Ä¢ –†–µ—Å—É—Ä—Å ${condition.targetId}: ${resource.value} >= ${condition.targetValue} = ${result}`);
          }
          return result;
        }
        
        if (condition.operator === 'eq') {
          const result = resource.value === condition.targetValue;
          if (this.debugMode) {
            this.steps.push(`  ‚Ä¢ –†–µ—Å—É—Ä—Å ${condition.targetId}: ${resource.value} === ${condition.targetValue} = ${result}`);
          }
          return result;
        }
        break;
        
      case 'building':
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–∞–Ω–∏—è
        const building = this.gameState.buildings[condition.targetId];
        if (!building) {
          if (this.debugMode) this.steps.push(`  ‚Ä¢ –ó–¥–∞–Ω–∏–µ ${condition.targetId} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
          return false;
        }
        
        if (condition.operator === 'gte') {
          const result = building.count >= condition.targetValue;
          if (this.debugMode) {
            this.steps.push(`  ‚Ä¢ –ó–¥–∞–Ω–∏–µ ${condition.targetId}: ${building.count} >= ${condition.targetValue} = ${result}`);
          }
          return result;
        }
        
        if (condition.operator === 'eq') {
          const result = building.count === condition.targetValue;
          if (this.debugMode) {
            this.steps.push(`  ‚Ä¢ –ó–¥–∞–Ω–∏–µ ${condition.targetId}: ${building.count} === ${condition.targetValue} = ${result}`);
          }
          return result;
        }
        break;
        
      case 'upgrade':
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—É–ø–ª–µ–Ω–æ –ª–∏ —É–ª—É—á—à–µ–Ω–∏–µ
        const upgrade = this.gameState.upgrades[condition.targetId];
        if (!upgrade) {
          if (this.debugMode) this.steps.push(`  ‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ ${condition.targetId} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
          return false;
        }
        
        if (condition.operator === 'eq') {
          const result = Boolean(upgrade.purchased) === condition.targetValue;
          if (this.debugMode) {
            this.steps.push(`  ‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ ${condition.targetId} –∫—É–ø–ª–µ–Ω–æ: ${Boolean(upgrade.purchased)} === ${condition.targetValue} = ${result}`);
          }
          return result;
        }
        break;
        
      case 'counter':
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
        const counter = this.gameState.counters[condition.targetId];
        if (!counter) {
          if (this.debugMode) this.steps.push(`  ‚Ä¢ –°—á–µ—Ç—á–∏–∫ ${condition.targetId} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
          return false;
        }
        
        const counterValue = typeof counter === 'number' ? counter : counter.value;
        
        if (condition.operator === 'gte') {
          const result = counterValue >= condition.targetValue;
          if (this.debugMode) {
            this.steps.push(`  ‚Ä¢ –°—á–µ—Ç—á–∏–∫ ${condition.targetId}: ${counterValue} >= ${condition.targetValue} = ${result}`);
          }
          return result;
        }
        
        if (condition.operator === 'eq') {
          const result = counterValue === condition.targetValue;
          if (this.debugMode) {
            this.steps.push(`  ‚Ä¢ –°—á–µ—Ç—á–∏–∫ ${condition.targetId}: ${counterValue} === ${condition.targetValue} = ${result}`);
          }
          return result;
        }
        break;
    }
    
    if (this.debugMode) this.steps.push(`  ‚Ä¢ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –∏–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä`);
    return false;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —É—Å–ª–æ–≤–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
   */
  private checkAllConditions(item: UnlockableItem): boolean {
    if (this.debugMode) {
      this.steps.push(`–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –¥–ª—è ${item.type} "${item.name}"`);
    }
    
    // –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–π –Ω–µ—Ç, —ç–ª–µ–º–µ–Ω—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (!item.conditions || item.conditions.length === 0) {
      if (this.debugMode) this.steps.push(`‚Ä¢ –ù–µ—Ç —É—Å–ª–æ–≤–∏–π, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`);
      return true;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —É—Å–ª–æ–≤–∏—è
    const result = item.conditions.every(condition => this.checkCondition(condition));
    if (this.debugMode) {
      this.steps.push(`‚Ä¢ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${result ? "‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ" : "‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ"}`);
    }
    return result;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   */
  public updateGameState(state: GameState): GameState {
    let updatedState = { ...state };
    
    if (this.debugMode) {
      this.steps.push("üîì –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫");
    }
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –≤ —Ä–µ–µ—Å—Ç—Ä–µ
    Object.values(unlockableItemsRegistry).forEach(item => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å—Å—è
      if (!item.autoUnlock) return;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
      const shouldBeUnlocked = this.checkAllConditions(item);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
      switch (item.type) {
        case 'resource':
          // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–µ–π—á–∞—Å
          if (shouldBeUnlocked && !updatedState.resources[item.id]?.unlocked) {
            if (this.debugMode) {
              this.steps.push(`‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ä–µ—Å—É—Ä—Å: ${item.name}`);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—Å—É—Ä—Å
            updatedState.resources = {
              ...updatedState.resources,
              [item.id]: {
                ...updatedState.resources[item.id],
                unlocked: true
              }
            };
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            updatedState.unlocks = {
              ...updatedState.unlocks,
              [item.id]: true
            };
            
            // –ï—Å–ª–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
            if (item.id === 'electricity') {
              const hasGenerator = updatedState.buildings.generator?.count > 0;
              if (!hasGenerator) {
                // –ï—Å–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç, –æ—Ç–º–µ–Ω—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É
                updatedState.resources[item.id].unlocked = false;
                updatedState.unlocks[item.id] = false;
                if (this.debugMode) {
                  this.steps.push(`‚ùå –û—Ç–º–µ–Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞: –Ω–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞`);
                }
              }
            }
          }
          break;
          
        case 'building':
          // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–µ–π—á–∞—Å
          if (shouldBeUnlocked && !updatedState.buildings[item.id]?.unlocked) {
            if (this.debugMode) {
              this.steps.push(`‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–¥–∞–Ω–∏–µ: ${item.name}`);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∑–¥–∞–Ω–∏–µ
            updatedState.buildings = {
              ...updatedState.buildings,
              [item.id]: {
                ...updatedState.buildings[item.id],
                unlocked: true
              }
            };
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            updatedState.unlocks = {
              ...updatedState.unlocks,
              [item.id]: true
            };
            
            // –û—Å–æ–±–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∑–¥–∞–Ω–∏—è "–ü—Ä–∞–∫—Ç–∏–∫–∞" - —Ç—Ä–µ–±—É–µ—Ç—Å—è 2 –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π
            if (item.id === 'practice') {
              const applyKnowledgeCount = 
                updatedState.counters.applyKnowledge?.value || 0;
              
              if (applyKnowledgeCount < 2) {
                // –ï—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π –º–µ–Ω—å—à–µ 2, –æ—Ç–º–µ–Ω—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É
                updatedState.buildings[item.id].unlocked = false;
                updatedState.unlocks[item.id] = false;
                if (this.debugMode) {
                  this.steps.push(`‚ùå –û—Ç–º–µ–Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏: –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π –∑–Ω–∞–Ω–∏–π –º–µ–Ω—å—à–µ 2 (${applyKnowledgeCount})`);
                }
              }
            }
          }
          break;
          
        case 'upgrade':
          // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–µ–π—á–∞—Å
          if (shouldBeUnlocked && !updatedState.upgrades[item.id]?.unlocked) {
            if (this.debugMode) {
              this.steps.push(`‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ: ${item.name}`);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–∏–µ
            updatedState.upgrades = {
              ...updatedState.upgrades,
              [item.id]: {
                ...updatedState.upgrades[item.id],
                unlocked: true
              }
            };
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            updatedState.unlocks = {
              ...updatedState.unlocks,
              [item.id]: true
            };
          }
          break;
          
        case 'feature':
          // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–µ–π—á–∞—Å
          if (shouldBeUnlocked && !updatedState.unlocks[item.id]) {
            if (this.debugMode) {
              this.steps.push(`‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: ${item.name}`);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            updatedState.unlocks = {
              ...updatedState.unlocks,
              [item.id]: true
            };
            
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
            if (item.id === 'research') {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
              const hasGenerator = updatedState.buildings.generator?.count > 0;
              if (!hasGenerator) {
                // –ï—Å–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç, –æ—Ç–º–µ–Ω—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É
                updatedState.unlocks[item.id] = false;
                if (this.debugMode) {
                  this.steps.push(`‚ùå –û—Ç–º–µ–Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π: –Ω–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞`);
                }
              }
            }
          }
          break;
      }
    });
    
    if (this.debugMode) {
      this.steps.push("üîì –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫");
    }
    
    return updatedState;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ —ç–ª–µ–º–µ–Ω—Ç
   */
  public isUnlocked(itemId: string): boolean {
    const item = unlockableItemsRegistry[itemId];
    
    if (!item) {
      console.warn(`–≠–ª–µ–º–µ–Ω—Ç —Å ID "${itemId}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–µ—Å—Ç—Ä–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫`);
      return false;
    }
    
    switch (item.type) {
      case 'resource':
        return Boolean(this.gameState.resources[itemId]?.unlocked);
      case 'building':
        return Boolean(this.gameState.buildings[itemId]?.unlocked);
      case 'upgrade':
        return Boolean(this.gameState.upgrades[itemId]?.unlocked);
      case 'feature':
        return Boolean(this.gameState.unlocks[itemId]);
      default:
        return false;
    }
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç
   */
  public forceUnlock(itemId: string): GameState {
    const item = unlockableItemsRegistry[itemId];
    
    if (!item) {
      console.warn(`–≠–ª–µ–º–µ–Ω—Ç —Å ID "${itemId}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–µ—Å—Ç—Ä–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫`);
      return this.gameState;
    }
    
    let newState = { ...this.gameState };
    
    switch (item.type) {
      case 'resource':
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å
        newState.resources = {
          ...newState.resources,
          [itemId]: {
            ...newState.resources[itemId],
            unlocked: true
          }
        };
        break;
      case 'building':
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∑–¥–∞–Ω–∏–µ
        newState.buildings = {
          ...newState.buildings,
          [itemId]: {
            ...newState.buildings[itemId],
            unlocked: true
          }
        };
        break;
      case 'upgrade':
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–∏–µ
        newState.upgrades = {
          ...newState.upgrades,
          [itemId]: {
            ...newState.upgrades[itemId],
            unlocked: true
          }
        };
        break;
    }
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –æ–±—â–µ–º —Ä–µ–µ—Å—Ç—Ä–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
    newState.unlocks = {
      ...newState.unlocks,
      [itemId]: true
    };
    
    return newState;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
   */
  public forceCheckAllUnlocks(): GameState {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const updatedState = this.updateGameState(this.gameState);
    
    // –û—Å–æ–±–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
    // –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º "–ü—Ä–∞–∫—Ç–∏–∫–∞"
    if (updatedState.counters.applyKnowledge?.value >= 2) {
      const practiceBuilding = updatedState.buildings.practice;
      if (practiceBuilding) {
        practiceBuilding.unlocked = true;
        updatedState.unlocks.practice = true;
      }
    } else {
      const practiceBuilding = updatedState.buildings.practice;
      if (practiceBuilding) {
        practiceBuilding.unlocked = false;
        updatedState.unlocks.practice = false;
      }
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ" –∏ "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"
    if (updatedState.buildings.generator?.count > 0) {
      // –ï—Å–ª–∏ –µ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ
      if (updatedState.resources.electricity) {
        updatedState.resources.electricity.unlocked = true;
        updatedState.unlocks.electricity = true;
      }
      
      // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤–∫–ª–∞–¥–∫—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
      updatedState.unlocks.research = true;
    } else {
      // –ï—Å–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç, –±–ª–æ–∫–∏—Ä—É–µ–º —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ
      if (updatedState.resources.electricity) {
        updatedState.resources.electricity.unlocked = false;
        updatedState.unlocks.electricity = false;
      }
      
      // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤–∫–ª–∞–¥–∫—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
      updatedState.unlocks.research = false;
    }
    
    return updatedState;
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∞–≥–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
   */
  public getDebugSteps(): string[] {
    return this.steps;
  }
}
