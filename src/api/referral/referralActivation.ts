
// –°–µ—Ä–≤–∏—Å –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤

import { supabase } from '@/integrations/supabase/client';
import { getUserIdentifier } from '../userIdentification';
import { checkSupabaseConnection } from '../connectionUtils';
import { REFERRAL_TABLE, SAVES_TABLE } from '../apiTypes';
import { ReferralDataWithActivation } from './referralTypes';
import { safeDispatchGameEvent } from '@/context/utils/eventBusUtils';

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞ (–∫–æ–≥–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ "–û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞")
export const activateReferral = async (referralId: string): Promise<boolean> => {
  try {
    console.log('üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞ —Å ID:', referralId);
    
    const isConnected = await checkSupabaseConnection();
    if (!isConnected) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞');
      return false;
    }
    
    const userId = await getUserIdentifier();
    console.log('–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', userId);
    
    const { data: referralExists, error: referralExistsError } = await supabase
      .from(REFERRAL_TABLE)
      .select('user_id')
      .eq('user_id', referralId)
      .single();
      
    if (referralExistsError || !referralExists) {
      console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª —Å ID:', referralId);
      console.log('–ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏');
      referralId = userId;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    const { data: activationCheck, error: checkError } = await supabase
      .from(REFERRAL_TABLE)
      .select('*')
      .eq('user_id', referralId)
      .single();
    
    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:', checkError);
      return false;
    }
    
    const activationData = activationCheck as unknown as ReferralDataWithActivation;
    const isAlreadyActivated = activationData && activationData.is_activated === true;
    
    console.log(`–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ ${referralId} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ${isAlreadyActivated ? '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' : '–Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}`);
    
    if (isAlreadyActivated) {
      console.log('‚ö†Ô∏è –†–µ—Ñ–µ—Ä–∞–ª —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return true;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–µ—Ä–µ
    const { data: userData, error: userError } = await supabase
      .from(REFERRAL_TABLE)
      .select('referred_by')
      .eq('user_id', referralId)
      .single();
      
    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userError);
      return false;
    }
      
    if (!userData || !userData.referred_by) {
      console.warn('‚ö†Ô∏è –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, –∫—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. userData:', userData);
      return false;
    }
    
    console.log('–ü–æ–ª—É—á–µ–Ω –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ:', userData.referred_by);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const { data: referrerData, error: referrerError } = await supabase
      .from(REFERRAL_TABLE)
      .select('user_id')
      .eq('referral_code', userData.referred_by)
      .single();
      
    if (referrerError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º:', referrerError);
      return false;
    }
      
    if (!referrerData) {
      console.warn('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º', userData.referred_by);
      return false;
    }
    
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', referrerData.user_id);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä—ã –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
    const { data: saveData, error: saveError } = await supabase
      .from(SAVES_TABLE)
      .select('game_data')
      .eq('user_id', referrerData.user_id)
      .single();
      
    if (saveError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', saveError);
      return false;
    }
      
    if (!saveData || !saveData.game_data) {
      console.warn('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', referrerData.user_id);
      return false;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ referral_data
    const { error: updateReferralError } = await supabase
      .from(REFERRAL_TABLE)
      .update({ is_activated: true })
      .eq('user_id', referralId);
      
    if (updateReferralError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ –ë–î:', updateReferralError);
      return false;
    }
    
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è', referralId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä—ã
    return await updateReferralStatusInGameSave(referralId, saveData.game_data, referrerData.user_id);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:', error);
    return false;
  }
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä—ã
async function updateReferralStatusInGameSave(
  referralId: string, 
  gameData: any, 
  referrerUserId: string
): Promise<boolean> {
  try {
    if (!gameData.referrals) {
      gameData.referrals = [{
        id: referralId,
        username: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${referralId.substring(0, 6)}`,
        activated: true,  // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º boolean —Ç–∏–ø
        joinedAt: Date.now()
      }];
      
      console.log('–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', gameData.referrals);
      
      const { error: updateError } = await supabase
        .from(SAVES_TABLE)
        .update({ game_data: gameData })
        .eq('user_id', referrerUserId);
        
      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', updateError);
        return false;
      }
      
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Å–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–µ—Ñ–µ—Ä–∞–ª');
      
      safeDispatchGameEvent("–í–∞—à —Ä–µ—Ñ–µ—Ä–µ—Ä –ø–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å –∑–∞ –≤–∞—à–µ —Ä–∞–∑–≤–∏—Ç–∏–µ!", "success");
      
      return true;
    } else {
      const referralIndex = gameData.referrals.findIndex((ref: any) => ref.id === referralId);
      
      if (referralIndex === -1) {
        console.log('‚ö†Ô∏è –†–µ—Ñ–µ—Ä–∞–ª —Å ID', referralId, '–Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π');
        
        const newReferral = {
          id: referralId,
          username: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${referralId.substring(0, 6)}`,
          activated: true,  // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º boolean —Ç–∏–ø
          joinedAt: Date.now()
        };
        
        console.log('–î–æ–±–∞–≤–ª—è–µ–º –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:', newReferral);
        
        gameData.referrals.push(newReferral);
      } else {
        const referral = gameData.referrals[referralIndex];
        
        if (referral.activated === true) {
          console.log('‚ö†Ô∏è –†–µ—Ñ–µ—Ä–∞–ª —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä—ã');
          return true;
        }
        
        console.log('–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞. –°—Ç–∞—Ç—É—Å –¥–æ:', referral.activated);
        
        gameData.referrals[referralIndex] = {
          ...referral,
          activated: true  // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º boolean —Ç–∏–ø
        };
      }
      
      console.log('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:', 
        gameData.referrals.map((r: any) => ({ id: r.id, activated: r.activated }))
      );
      
      const { error: updateError } = await supabase
        .from(SAVES_TABLE)
        .update({ game_data: gameData })
        .eq('user_id', referrerUserId);
      
      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', updateError);
        return false;
      }
      
      console.log('‚úÖ –†–µ—Ñ–µ—Ä–∞–ª —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä—ã');
      
      safeDispatchGameEvent("–í–∞—à —Ä–µ—Ñ–µ—Ä–µ—Ä –ø–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å –∑–∞ –≤–∞—à–µ —Ä–∞–∑–≤–∏—Ç–∏–µ!", "success");
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
      setTimeout(() => {
        try {
          const refreshEvent = new CustomEvent('refresh-referrals');
          window.dispatchEvent(refreshEvent);
          console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤`);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:`, error);
        }
      }, 500);
      
      return true;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:', error);
    return false;
  }
}
