
import { supabase } from '@/integrations/supabase/client';

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase —Å –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
export const checkSupabaseConnection = async (): Promise<boolean> => {
  try {
    console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase...');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    const timeoutPromise = new Promise<boolean>((_, reject) => {
      setTimeout(() => {
        reject(new Error('Timeout waiting for Supabase connection'));
      }, 10000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–æ 10 —Å–µ–∫—É–Ω–¥
    });
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    const connectionPromise = new Promise<boolean>(async (resolve) => {
      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        const { error } = await supabase
          .from('referral_data')
          .select('count')
          .limit(1)
          .single();
          
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
        if (error && error.code !== 'PGRST116' && error.code !== 'PGRST104') {
          if (error.message && 
              (error.message.includes('cloudflare') || 
               error.message.includes('Cloudflare') ||
               error.message.includes('timeout') ||
               error.message.includes('network error'))) {
            console.warn('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error.message);
            // –î–ª—è –æ—à–∏–±–æ–∫ Cloudflare, —Å—á–∏—Ç–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏–º, –Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
            resolve(true);
            return;
          }
          
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase:', error);
          // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–±–æ—á–∏–º
          // –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –∏–∑–±–µ–∂–∞—Ç—å –ª–æ–∂–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø—Ä–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö
          resolve(true);
          return;
        }
        
        console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        resolve(true);
      } catch (err) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É:', err);
        // –î–∞–∂–µ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–±–æ—á–∏–º
        resolve(true);
      }
    });
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Promise.race –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∞–π–º–∞—É—Ç–∞
    return await Promise.race([connectionPromise, timeoutPromise])
      .catch(err => {
        console.warn('‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', err);
        // –ü—Ä–∏ —Ç–∞–π–º–∞—É—Ç–µ –≤—Å—ë —Ä–∞–≤–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—É
        return true;
      });
  } catch (error) {
    console.warn('‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error);
    // –î–∞–∂–µ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—É
    return true;
  }
};
