
import { supabase } from '@/integrations/supabase/client';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
export const checkSupabaseConnection = async (): Promise<boolean> => {
  try {
    console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase...');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    const timeoutPromise = new Promise<boolean>((_, reject) => {
      setTimeout(() => {
        reject(new Error('Timeout waiting for Supabase connection'));
      }, 5000); // 5 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    });
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é RPC –≤–º–µ—Å—Ç–æ –∑–∞–ø—Ä–æ—Å–∞ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ
    const connectionPromise = supabase
      .rpc('generate_unique_ref_code')
      .then(() => {
        console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        return true;
      })
      .catch(err => {
        // –î–∞–∂–µ –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –µ—Å—Ç—å, —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —É—Å–ø–µ—Ö–æ–º
        if (err.code === 'PGRST301' || err.message.includes('function') || err.message.includes('does not exist')) {
          console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (–æ—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏)');
          return true;
        }
        
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase:', err);
        return false;
      }) as Promise<boolean>; // –Ø–≤–Ω–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Promise.race –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∞–π–º–∞—É—Ç–∞
    return await Promise.race([connectionPromise, timeoutPromise])
      .catch(err => {
        console.error('‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase:', err);
        return false;
      });
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase:', error);
    return false;
  }
};
