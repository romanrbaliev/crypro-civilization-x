
import { GameState } from '@/context/types';
import { initialState } from '@/context/initialState';

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã
export function validateGameState(state: any): boolean {
  if (!state) return false;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π
  const requiredFields = ['resources', 'buildings', 'upgrades', 'unlocks'];
  for (const field of requiredFields) {
    if (!state[field] || typeof state[field] !== 'object') {
      console.error(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–ª–µ ${field}`);
      // –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–ª–µ–π, –º—ã –Ω–µ —Å—á–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–º–∏
      // –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –±—É–¥—É—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ initialState
      continue;
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
  if (state.resources && (!state.resources.knowledge || !state.resources.usdt)) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –±–∞–∑–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã knowledge –∏–ª–∏ usdt');
    // –ú–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ initialState
    return true;
  }
  
  return true;
}

// –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å initialState –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π
export function mergeWithInitialState(loadedState: any): GameState {
  // –°–æ–∑–¥–∞–µ–º –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const baseState = JSON.parse(JSON.stringify(initialState));
  
  // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  for (const key of Object.keys(baseState)) {
    // –ï—Å–ª–∏ –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –æ—Å—Ç–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ initialState
    if (loadedState[key] === undefined) {
      console.log(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–µ –ø–æ–ª–µ: ${key}`);
      continue;
    }
    
    // –î–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ –¥–µ–ª–∞–µ–º —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
    if (typeof baseState[key] === 'object' && 
        baseState[key] !== null && 
        !Array.isArray(baseState[key])) {
      
      loadedState[key] = {
        ...baseState[key],
        ...loadedState[key]
      };
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –ø–æ–ª–µ–π
  if (!loadedState.resources) {
    loadedState.resources = { ...baseState.resources };
    console.log('‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã');
  }
  
  if (!loadedState.buildings) {
    loadedState.buildings = { ...baseState.buildings };
    console.log('‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–¥–∞–Ω–∏—è');
  }
  
  if (!loadedState.upgrades) {
    loadedState.upgrades = { ...baseState.upgrades };
    console.log('‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —É–ª—É—á—à–µ–Ω–∏—è');
  }
  
  if (!loadedState.unlocks) {
    loadedState.unlocks = { ...baseState.unlocks };
    console.log('‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
  if (!loadedState.specializationSynergies) {
    loadedState.specializationSynergies = { ...baseState.specializationSynergies };
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–∏–Ω–µ—Ä–≥–∏—è—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π');
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
  if (!loadedState.referrals) {
    loadedState.referrals = [];
    console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤');
  }
  
  if (!loadedState.referralHelpers) {
    loadedState.referralHelpers = [];
    console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø—É—Å—Ç–æ–π –º–∞—Å—ÅÔøΩÔøΩ–≤ –ø–æ–º–æ—â–Ω–∏–∫–æ–≤');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
  if (!loadedState.counters) {
    loadedState.counters = { ...baseState.counters };
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—á–µ—Ç—á–∏–∫–∏');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–æ–±—ã—Ç–∏–π
  if (!loadedState.eventMessages) {
    loadedState.eventMessages = { ...baseState.eventMessages };
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–æ–±—ã—Ç–∏—è—Ö');
  }
  
  // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –∑–¥–∞–Ω–∏–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç initialState
  for (const resourceKey of Object.keys(baseState.resources)) {
    if (!loadedState.resources[resourceKey]) {
      loadedState.resources[resourceKey] = { ...baseState.resources[resourceKey] };
      console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–µ—Å—É—Ä—Å: ${resourceKey}`);
    }
  }
  
  for (const buildingKey of Object.keys(baseState.buildings)) {
    if (!loadedState.buildings[buildingKey]) {
      loadedState.buildings[buildingKey] = { ...baseState.buildings[buildingKey] };
      console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–µ –∑–¥–∞–Ω–∏–µ: ${buildingKey}`);
    }
  }
  
  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∑–¥–∞–Ω–∏—è –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  if (loadedState.buildings && loadedState.buildings.coolingSystem) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è
    if (loadedState.buildings.homeComputer && loadedState.buildings.homeComputer.count < 2) {
      loadedState.buildings.coolingSystem.unlocked = false;
      console.log('üîí –°–∏—Å—Ç–µ–º–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤');
    }
  }
  
  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ USDT –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, –µ—Å–ª–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ª–æ–≤–∏—è
  if (loadedState.resources && loadedState.resources.usdt) {
    if (!loadedState.counters.applyKnowledge || loadedState.counters.applyKnowledge.value < 2) {
      loadedState.resources.usdt.unlocked = false;
      console.log('üîí USDT –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∑–Ω–∞–Ω–∏—è –¥–≤–∞–∂–¥—ã');
    }
  }
  
  return loadedState as GameState;
}
