
import { GameState } from '@/context/types';

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Ü–µ–ª–µ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å–ø–∏—Å—ã–≤–∞–µ—Ç
 * –∫–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∑–Ω–∞–Ω–∏–π
 */
export const debugKnowledgeProduction = (state: GameState) => {
  const steps: string[] = [];
  let finalValue = 0;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Å—É—Ä—Å –∑–Ω–∞–Ω–∏–π
  if (!state.resources.knowledge || !state.resources.knowledge.unlocked) {
    steps.push('–†–µ—Å—É—Ä—Å "–ó–Ω–∞–Ω–∏—è" –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.');
    return { steps, finalValue };
  }
  
  try {
    // –®–∞–≥ 1: –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –æ—Ç –∑–¥–∞–Ω–∏–π
    steps.push('–†–∞—Å—á–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∑–Ω–∞–Ω–∏–π:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
    let baseProduction = 0;
    if (state.buildings.practice && state.buildings.practice.count > 0) {
      const practiceCount = state.buildings.practice.count;
      baseProduction = 1 * practiceCount; // 1 –∑–Ω–∞–Ω–∏–µ –∑–∞ –ø—Ä–∞–∫—Ç–∏–∫—É
      steps.push(`–ë–∞–∑–æ–≤–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –æ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏: ${practiceCount} √ó 1 = ${baseProduction} –∑–Ω–∞–Ω–∏–π/—Å–µ–∫`);
    } else {
      steps.push('–ù–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∑–Ω–∞–Ω–∏–π.');
    }
    
    // –®–∞–≥ 2: –ü—Ä–∏–º–µ–Ω—è–µ–º –±–æ–Ω—É—Å—ã –æ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
    steps.push('\n–ë–æ–Ω—É—Å—ã –æ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π:');
    
    let researchMultiplier = 1;
    const blockchainBasicsPurchased = 
      (state.upgrades.blockchainBasics && state.upgrades.blockchainBasics.purchased) ||
      (state.upgrades.basicBlockchain && state.upgrades.basicBlockchain.purchased) ||
      (state.upgrades.blockchain_basics && state.upgrades.blockchain_basics.purchased);
    
    if (blockchainBasicsPurchased) {
      researchMultiplier += 0.1; // +10%
      steps.push(`‚Ä¢ –û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞: +10%`);
    } else {
      steps.push('–ù–µ—Ç –±–æ–Ω—É—Å–æ–≤ –æ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π');
    }
    
    // –®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω—è–µ–º –±–æ–Ω—É—Å—ã –æ—Ç –∑–¥–∞–Ω–∏–π
    steps.push('\n–ë–æ–Ω—É—Å—ã –æ—Ç –∑–¥–∞–Ω–∏–π:');
    let buildingBonusMultiplier = 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∫–∞–Ω–∞–ª
    if (state.buildings.internetConnection && state.buildings.internetConnection.count > 0) {
      const internetConnectionCount = state.buildings.internetConnection.count;
      const internetConnectionBonus = 0.2 * internetConnectionCount; // +20% –∑–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å
      buildingBonusMultiplier += internetConnectionBonus;
      steps.push(`‚Ä¢ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–∫–∞–Ω–∞–ª (${internetConnectionCount} —à—Ç.): +${(internetConnectionBonus * 100).toFixed(0)}%`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏–ø—Ç–æ–±–∏–±–ª–∏–æ—Ç–µ–∫—É (—Ñ–∞–∑–∞ 2)
    if (state.buildings.cryptoLibrary && state.buildings.cryptoLibrary.count > 0) {
      const cryptoLibraryCount = state.buildings.cryptoLibrary.count;
      const cryptoLibraryBonus = 0.5 * cryptoLibraryCount; // +50% –∑–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å
      buildingBonusMultiplier += cryptoLibraryBonus;
      steps.push(`‚Ä¢ –ö—Ä–∏–ø—Ç–æ–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ (${cryptoLibraryCount} —à—Ç.): +${(cryptoLibraryBonus * 100).toFixed(0)}%`);
    }
    
    if (buildingBonusMultiplier === 0) {
      steps.push('–ù–µ—Ç –±–æ–Ω—É—Å–æ–≤ –æ—Ç –∑–¥–∞–Ω–∏–π');
    }
    
    // –®–∞–≥ 4: –ü—Ä–∏–º–µ–Ω—è–µ–º –±–æ–Ω—É—Å—ã –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    steps.push('\n–ë–æ–Ω—É—Å—ã –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:');
    let specializationMultiplier = 0;
    
    if (state.specialization === 'analyst') {
      specializationMultiplier += 0.25; // +25%
      steps.push(`‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫: +25%`);
    } else if (state.specialization === 'influencer') {
      specializationMultiplier += 0.1; // +10%
      steps.push(`‚Ä¢ –ò–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä: +10%`);
    } else {
      steps.push('–ù–µ—Ç –±–æ–Ω—É—Å–æ–≤ –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
    }
    
    // –®–∞–≥ 5: –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –±–æ–Ω—É—Å—ã –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–≤
    steps.push('\n–ë–æ–Ω—É—Å—ã –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    const activeReferrals = state.referrals ? Object.values(state.referrals).filter(ref => ref.active).length : 0;
    const referralBonus = activeReferrals * 0.05; // +5% –∑–∞ –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    
    if (activeReferrals > 0) {
      steps.push(`‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã (${activeReferrals} —à—Ç.): +${(referralBonus * 100).toFixed(0)}%`);
    } else {
      steps.push('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–º–æ—â–Ω–∏–∫–æ–≤
    steps.push('\n–ë–æ–Ω—É—Å—ã –æ—Ç –ø–æ–º–æ—â–Ω–∏–∫–æ–≤:');
    let helperBonus = 0;
    const helpers = state.referralHelpers || {};
    let hasActiveHelpers = false;
    let activeHelperCount = 0;
    
    for (const helperId in helpers) {
      const helper = helpers[helperId];
      if (helper.status === 'active' && helper.buildingId === 'practice') {
        hasActiveHelpers = true;
        helperBonus += 0.15; // +15% –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ
        activeHelperCount++;
        steps.push(`‚Ä¢ –°—Ç–∞—Ç—É—Å –ø–æ–º–æ—â–Ω–∏–∫–∞ ${helper.helper_id}: ${helper.status} (+15%)`);
      }
    }
    
    if (!hasActiveHelpers) {
      steps.push('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–º–æ—â–Ω–∏–∫–æ–≤');
    }
    
    // –û–±—â–∏–π –±–æ–Ω—É—Å –æ—Ç –≤—Å–µ—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
    const totalMultiplier = 1 + researchMultiplier - 1 + buildingBonusMultiplier + specializationMultiplier + referralBonus + helperBonus;
    
    // –®–∞–≥ 6: –ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç
    steps.push('\n–ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç:');
    steps.push(`–ë–∞–∑–æ–≤–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: ${baseProduction.toFixed(2)} –∑–Ω–∞–Ω–∏–π/—Å–µ–∫`);
    steps.push(`–û–±—â–∏–π –±–æ–Ω—É—Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: √ó${totalMultiplier.toFixed(2)}`);
    steps.push(`–ò—Ç–æ–≥–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: ${baseProduction.toFixed(2)} √ó ${totalMultiplier.toFixed(2)} = ${(baseProduction * totalMultiplier).toFixed(2)} –∑–Ω–∞–Ω–∏–π/—Å–µ–∫`);
    
    finalValue = baseProduction * totalMultiplier;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    steps.push(`\n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ state.resources.knowledge.perSecond: ${state.resources.knowledge.perSecond.toFixed(2)} –∑–Ω–∞–Ω–∏–π/—Å–µ–∫`);
    
    if (Math.abs(state.resources.knowledge.perSecond - finalValue) > 0.01) {
      steps.push(`‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö –∏ —Ç–µ–∫—É—â–µ–º –∑–Ω–∞—á–µ–Ω–∏–∏!`);
      steps.push(`–†–∞–∑–Ω–∏—Ü–∞: ${Math.abs(state.resources.knowledge.perSecond - finalValue).toFixed(2)}`);
    } else {
      steps.push(`‚úÖ –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞—Å—á–µ—Ç–∞–º`);
    }
    
    // –î–û–ë–ê–í–õ–ï–ù–û: –°—Ç–∞—Ç—É—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    steps.push('\nüìã –°—Ç–∞—Ç—É—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫:');
    steps.push(`‚Ä¢ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è: ${state.unlocks.applyKnowledge ? '‚úÖ' : '‚ùå'} (–ù—É–∂–Ω–æ 3+ –∫–ª–∏–∫–æ–≤ –Ω–∞ "–ò–∑—É—á–∏—Ç—å –∫—Ä–∏–ø—Ç—É")`);
    steps.push(`‚Ä¢ USDT: ${state.resources.usdt?.unlocked ? '‚úÖ' : '‚ùå'} (–ù—É–∂–Ω–æ 1+ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è")`);
    steps.push(`‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫–∞: ${state.buildings.practice?.unlocked ? '‚úÖ' : '‚ùå'} (–ù—É–∂–Ω–æ 2+ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è")`);
    steps.push(`‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: ${state.buildings.generator?.unlocked ? '‚úÖ' : '‚ùå'} (–ù—É–∂–Ω–æ 11+ USDT)`);
    steps.push(`‚Ä¢ –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ: ${state.resources.electricity?.unlocked ? '‚úÖ' : '‚ùå'} (–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞)`);
    steps.push(`‚Ä¢ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: ${state.unlocks.research ? '‚úÖ' : '‚ùå'} (–ù—É–∂–Ω–∞ 1+ –ü—Ä–∞–∫—Ç–∏–∫–∞)`);
    steps.push(`‚Ä¢ –û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞: ${state.upgrades.blockchainBasics?.unlocked ? '‚úÖ' : '‚ùå'} (–ù—É–∂–µ–Ω 1+ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä)`);
    steps.push(`‚Ä¢ –ö—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫: ${state.buildings.cryptoWallet?.unlocked ? '‚úÖ' : '‚ùå'} (–ù—É–∂–Ω—ã –∫—É–ø–ª–µ–Ω–Ω—ã–µ –û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞)`);
    steps.push(`‚Ä¢ –î–æ–º–∞—à–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä: ${state.buildings.homeComputer?.unlocked ? '‚úÖ' : '‚ùå'} (–ù—É–∂–Ω–æ 50+ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞)`);
    
  } catch (error) {
    steps.push(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ: ${error}`);
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∑–Ω–∞–Ω–∏–π:', error);
  }
  
  return { steps, finalValue };
};

/**
 * NEW: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Ü–µ–ª–µ–π, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
 * –æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏–π
 */
export const debugUnlockStatus = (state: GameState) => {
  const steps: string[] = [];
  
  try {
    steps.push('üìä –°—á–µ—Ç—á–∏–∫–∏:');
    steps.push(`‚Ä¢ –ö–ª–∏–∫–∏ –Ω–∞ "–ò–∑—É—á–∏—Ç—å –∫—Ä–∏–ø—Ç—É": ${getCounterValue(state, 'knowledgeClicks')} (–Ω—É–∂–Ω–æ 3+ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è")`);
    steps.push(`‚Ä¢ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞–Ω–∏–π: ${getCounterValue(state, 'applyKnowledge')} (–Ω—É–∂–Ω–æ 1+ –¥–ª—è USDT, 2+ –¥–ª—è –ü—Ä–∞–∫—Ç–∏–∫–∏)`);
    
    steps.push('\nüîì –°—Ç–∞—Ç—É—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫:');
    steps.push(`‚Ä¢ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è: ${state.unlocks.applyKnowledge ? '‚úÖ' : '‚ùå'}`);
    steps.push(`‚Ä¢ USDT: ${state.unlocks.usdt ? '‚úÖ' : '‚ùå'} (—Ä–µ—Å—É—Ä—Å: ${state.resources.usdt?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫–∞: ${state.unlocks.practice ? '‚úÖ' : '‚ùå'} (–∑–¥–∞–Ω–∏–µ: ${state.buildings.practice?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: ${state.unlocks.generator ? '‚úÖ' : '‚ùå'} (–∑–¥–∞–Ω–∏–µ: ${state.buildings.generator?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ: ${state.unlocks.electricity ? '‚úÖ' : '‚ùå'} (—Ä–µ—Å—É—Ä—Å: ${state.resources.electricity?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞: ${state.unlocks.blockchainBasics ? '‚úÖ' : '‚ùå'} (–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: ${state.upgrades.blockchainBasics?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –ö—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫: ${state.unlocks.cryptoWallet ? '‚úÖ' : '‚ùå'} (–∑–¥–∞–Ω–∏–µ: ${state.buildings.cryptoWallet?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –î–æ–º–∞—à–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä: ${state.unlocks.homeComputer ? '‚úÖ' : '‚ùå'} (–∑–¥–∞–Ω–∏–µ: ${state.buildings.homeComputer?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–∫–∞–Ω–∞–ª: ${state.unlocks.internetChannel ? '‚úÖ' : '‚ùå'} (–∑–¥–∞–Ω–∏–µ: ${state.buildings.internetChannel?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –ú–∞–π–Ω–µ—Ä: ${state.unlocks.miner ? '‚úÖ' : '‚ùå'} (–∑–¥–∞–Ω–∏–µ: ${state.buildings.miner?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ Bitcoin: ${state.unlocks.bitcoin ? '‚úÖ' : '‚ùå'} (—Ä–µ—Å—É—Ä—Å: ${state.resources.bitcoin?.unlocked ? '‚úÖ' : '‚ùå'})`);
    steps.push(`‚Ä¢ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: ${state.unlocks.research ? '‚úÖ' : '‚ùå'}`);
    
    steps.push('\nüèóÔ∏è –ó–¥–∞–Ω–∏—è:');
    for (const buildingId in state.buildings) {
      const building = state.buildings[buildingId];
      if (building) {
        steps.push(`‚Ä¢ ${building.name || buildingId}: ${building.count} —à—Ç. (${building.unlocked ? '‚úÖ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ' : '‚ùå –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ'})`);
      }
    }
    
    steps.push('\nüìö –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:');
    for (const upgradeId in state.upgrades) {
      const upgrade = state.upgrades[upgradeId];
      if (upgrade) {
        steps.push(`‚Ä¢ ${upgrade.name || upgradeId}: ${upgrade.purchased ? '‚úÖ –∏–∑—É—á–µ–Ω–æ' : upgrade.unlocked ? '‚è≥ –¥–æ—Å—Ç—É–ø–Ω–æ' : '‚ùå –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ'}`);
      }
    }
    
  } catch (error) {
    steps.push(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö: ${error}`);
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫:', error);
  }
  
  return { steps };
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
function getCounterValue(state: GameState, counterId: string): number {
  const counter = state.counters[counterId];
  if (!counter) return 0;
  return typeof counter === 'object' ? counter.value : counter;
}
