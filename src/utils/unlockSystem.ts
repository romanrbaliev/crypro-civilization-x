// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≤ –∏–≥—Ä–µ

import { GameState } from '@/context/types';
import { safeDispatchGameEvent } from '@/context/utils/eventBusUtils';

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
export const checkAllUnlocks = (state: GameState): GameState => {
  let newState = { ...state };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
  newState = checkResourceUnlocks(newState);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–¥–∞–Ω–∏–π
  newState = checkBuildingUnlocks(newState);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
  newState = checkUpgradeUnlocks(newState);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
  newState = checkActionUnlocks(newState);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—á–µ—Ç—á–∏–∫–æ–≤
  newState = checkSpecialUnlocks(newState);
  
  // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ USDT –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
  if (newState.resources.usdt) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ USDT
    if (!newState.counters.applyKnowledge || newState.counters.applyKnowledge.value < 2) {
      // –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ–º USDT
      newState.resources.usdt.unlocked = false;
      newState.unlocks.usdt = false;
    } else {
      // –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ - —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º
      newState.resources.usdt.unlocked = true;
      newState.unlocks.usdt = true;
    }
  }
  
  return newState;
};

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏, –∑–∞–≤–∏—Å—è—â–∏–µ –æ—Ç —Å—á–µ—Ç—á–∏–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —É—Å–ª–æ–≤–∏–π
export const checkSpecialUnlocks = (state: GameState): GameState => {
  let newState = { ...state };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è"
  if (!state.unlocks.applyKnowledge && 
      state.counters.knowledgeClicks && 
      state.counters.knowledgeClicks.value >= 3) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ '–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è'");
    newState = {
      ...newState,
      unlocks: {
        ...newState.unlocks,
        applyKnowledge: true
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ ¬´–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è¬ª", "success");
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É "–ü—Ä–∞–∫—Ç–∏–∫–∞"
  if (!state.unlocks.practice && 
      state.counters.applyKnowledge && 
      state.counters.applyKnowledge.value >= 2) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–¥–∞–Ω–∏–µ '–ü—Ä–∞–∫—Ç–∏–∫–∞'");
    newState = {
      ...newState,
      unlocks: {
        ...newState.unlocks,
        practice: true
      },
      buildings: {
        ...newState.buildings,
        practice: {
          ...newState.buildings.practice,
          unlocked: true
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ ¬´–ü—Ä–∞–∫—Ç–∏–∫–∞¬ª", "success");
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å
  if (!state.unlocks.electricity && 
      state.buildings.generator && 
      state.buildings.generator.count > 0) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ä–µ—Å—É—Ä—Å '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ'");
    newState = {
      ...newState,
      unlocks: {
        ...newState.unlocks,
        electricity: true
      },
      resources: {
        ...newState.resources,
        electricity: {
          ...newState.resources.electricity,
          unlocked: true,
          name: "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ"
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç —Ä–µ—Å—É—Ä—Å ¬´–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ¬ª", "success");
  }
  
  if (!state.unlocks.computingPower && 
      state.buildings.homeComputer && 
      state.buildings.homeComputer.count > 0) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ä–µ—Å—É—Ä—Å '–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å'");
    newState = {
      ...newState,
      unlocks: {
        ...newState.unlocks,
        computingPower: true
      },
      resources: {
        ...newState.resources,
        computingPower: {
          ...newState.resources.computingPower,
          unlocked: true,
          name: "–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å"
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç —Ä–µ—Å—É—Ä—Å ¬´–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å¬ª", "success");
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ BTC (–±–∏—Ç–∫–æ–∏–Ω)
  if (!state.unlocks.btc && 
      state.buildings.autoMiner && 
      state.buildings.autoMiner.count > 0) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ä–µ—Å—É—Ä—Å 'BTC'");
    newState = {
      ...newState,
      unlocks: {
        ...newState.unlocks,
        btc: true
      },
      resources: {
        ...newState.resources,
        btc: {
          ...newState.resources.btc,
          unlocked: true,
          name: "BTC"
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç —Ä–µ—Å—É—Ä—Å ¬´BTC¬ª", "success");
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π —Ç—Ä–µ–π–¥–∏–Ω–≥"
  if (state.upgrades && state.upgrades.cryptoTrading && !state.upgrades.cryptoTrading.unlocked && 
      state.buildings.improvedWallet && 
      state.buildings.improvedWallet.count > 0) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π —Ç—Ä–µ–π–¥–∏–Ω–≥'");
    newState = {
      ...newState,
      upgrades: {
        ...newState.upgrades,
        cryptoTrading: {
          ...newState.upgrades.cryptoTrading,
          unlocked: true
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ ¬´–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π —Ç—Ä–µ–π–¥–∏–Ω–≥¬ª", "success");
  }
  
  return newState;
};

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
export const checkResourceUnlocks = (state: GameState): GameState => {
  let newState = { ...state };
  
  // USDT —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –°–¢–†–û–ì–û —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ 2-—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π –∑–Ω–∞–Ω–∏–π
  if (state.resources.usdt && !state.resources.usdt.unlocked && 
      state.counters.applyKnowledge && state.counters.applyKnowledge.value >= 2) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ä–µ—Å—É—Ä—Å 'USDT', —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π –∑–Ω–∞–Ω–∏–π:", state.counters.applyKnowledge.value);
    newState = {
      ...newState,
      resources: {
        ...newState.resources,
        usdt: {
          ...newState.resources.usdt,
          unlocked: true
        }
      },
      unlocks: {
        ...newState.unlocks,
        usdt: true // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–∫–∂–µ —Ñ–ª–∞–≥ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –æ–±—â–∏–µ unlocks
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç —Ä–µ—Å—É—Ä—Å ¬´USDT¬ª", "success");
  } else if (state.resources.usdt && state.resources.usdt.unlocked &&
      (!state.counters.applyKnowledge || state.counters.applyKnowledge.value < 2)) {
    // –ï—Å–ª–∏ USDT —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ - –±–ª–æ–∫–∏—Ä—É–µ–º
    newState = {
      ...newState,
      resources: {
        ...newState.resources,
        usdt: {
          ...newState.resources.usdt,
          unlocked: false
        }
      },
      unlocks: {
        ...newState.unlocks,
        usdt: false
      }
    };
    console.log("üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ä–µ—Å—É—Ä—Å 'USDT', –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏");
  }
  
  return newState;
};

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–¥–∞–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
export const checkBuildingUnlocks = (state: GameState): GameState => {
  let newState = { ...state };
  
  // –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 11 USDT
  if (state.buildings.generator && !state.buildings.generator.unlocked && 
      state.resources.usdt && state.resources.usdt.unlocked &&
      state.resources.usdt.value >= 11) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–¥–∞–Ω–∏–µ '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä'");
    newState = {
      ...newState,
      buildings: {
        ...newState.buildings,
        generator: {
          ...newState.buildings.generator,
          unlocked: true
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ ¬´–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä¬ª", "success");
  }
  
  // –î–æ–º–∞—à–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ 10 –µ–¥–∏–Ω–∏—Ü —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞
  if (state.buildings.homeComputer && !state.buildings.homeComputer.unlocked && 
      state.resources.electricity && state.resources.electricity.unlocked &&
      state.resources.electricity.value >= 10) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–¥–∞–Ω–∏–µ '–î–æ–º–∞—à–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä'");
    newState = {
      ...newState,
      buildings: {
        ...newState.buildings,
        homeComputer: {
          ...newState.buildings.homeComputer,
          unlocked: true
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ ¬´–î–æ–º–∞—à–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä¬ª", "success");
  }
  
  // –£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ 10 –æ–±—ã—á–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤
  if (state.buildings.improvedWallet && !state.buildings.improvedWallet.unlocked && 
      state.buildings.cryptoWallet && 
      state.buildings.cryptoWallet.count >= 10) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–¥–∞–Ω–∏–µ '–£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫'");
    newState = {
      ...newState,
      buildings: {
        ...newState.buildings,
        improvedWallet: {
          ...newState.buildings.improvedWallet,
          unlocked: true
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ ¬´–£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫¬ª", "success");
  }
  
  return newState;
};

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
export const checkUpgradeUnlocks = (state: GameState): GameState => {
  let newState = { ...state };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ state.upgrades —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!state.upgrades) {
    console.warn("‚ùå –û–±—ä–µ–∫—Ç upgrades –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏");
    return state;
  }
  
  // –û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
  if (state.upgrades.blockchainBasics && !state.upgrades.blockchainBasics.unlocked && 
      state.buildings.generator && 
      state.buildings.generator.count > 0) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ '–û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞'");
    newState = {
      ...newState,
      upgrades: {
        ...newState.upgrades,
        blockchainBasics: {
          ...newState.upgrades.blockchainBasics,
          unlocked: true
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ ¬´–û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞¬ª", "success");
  }
  
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—å–∫–æ–≤ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—å–∫–∞
  if (state.upgrades.walletSecurity && !state.upgrades.walletSecurity.unlocked && 
      state.buildings.cryptoWallet && 
      state.buildings.cryptoWallet.count > 0) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—å–∫–æ–≤'");
    newState = {
      ...newState,
      upgrades: {
        ...newState.upgrades,
        walletSecurity: {
          ...newState.upgrades.walletSecurity,
          unlocked: true
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—å–∫–æ–≤¬ª", "success");
  }
  
  // –û—Å–Ω–æ–≤—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è –ø–æ—Å–ª–µ –∏–∑—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤ –±–ª–æ–∫—á–µ–π–Ω–∞
  if (state.upgrades.cryptoCurrencyBasics && !state.upgrades.cryptoCurrencyBasics.unlocked && 
      state.upgrades.blockchainBasics && state.upgrades.blockchainBasics.purchased) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ '–û—Å–Ω–æ–≤—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç'");
    newState = {
      ...newState,
      upgrades: {
        ...newState.upgrades,
        cryptoCurrencyBasics: {
          ...newState.upgrades.cryptoCurrencyBasics,
          unlocked: true
        }
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ ¬´–û—Å–Ω–æ–≤—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç¬ª", "success");
  }
  
  return newState;
};

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
export const checkActionUnlocks = (state: GameState): GameState => {
  let newState = { ...state };
  
  // –ú–∞–π–Ω–∏–Ω–≥ –º–æ—â–Ω–æ—Å—Ç–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏
  if (!state.unlocks.miningPower && 
      state.resources.computingPower && 
      state.resources.computingPower.unlocked) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ '–ú–∞–π–Ω–∏–Ω–≥ –º–æ—â–Ω–æ—Å—Ç–∏'");
    newState = {
      ...newState,
      unlocks: {
        ...newState.unlocks,
        miningPower: true
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ ¬´–ú–∞–π–Ω–∏–Ω–≥¬ª", "success");
  }
  
  // –û–±–º–µ–Ω BTC —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ BTC
  if (!state.unlocks.exchangeBtc && 
      state.resources.btc && 
      state.resources.btc.unlocked) {
    console.log("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ '–û–±–º–µ–Ω BTC'");
    newState = {
      ...newState,
      unlocks: {
        ...newState.unlocks,
        exchangeBtc: true
      }
    };
    safeDispatchGameEvent("–û—Ç–∫—Ä—ã—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ ¬´–û–±–º–µ–Ω BTC¬ª", "success");
  }
  
  return newState;
};
