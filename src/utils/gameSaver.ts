
import { GameState } from '@/context/types';
import { saveGameToServer } from '@/api/gameStorage';
import { checkAllUnlocks } from '@/utils/unlockManager';

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
 */
export const saveGame = async (
  state: GameState, 
  hasConnection: boolean = true
): Promise<boolean> => {
  try {
    console.log('üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä—ã...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    const stateWithUnlocks = checkAllUnlocks(state);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const stateToSave = {
      ...stateWithUnlocks,
      lastSaved: Date.now()
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
    const serializedState = JSON.stringify(stateToSave);
    localStorage.setItem('gameState', serializedState);
    console.log('‚úÖ –ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ');
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –æ–±–ª–∞–∫–æ
    if (hasConnection) {
      const serverSaved = await saveGameToServer(stateToSave);
      if (serverSaved) {
        console.log('‚úÖ –ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –æ–±–ª–∞–∫–µ');
      } else {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–≥—Ä—É –≤ –æ–±–ª–∞–∫–µ');
      }
      return serverSaved;
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä—ã:', error);
    return false;
  }
};
