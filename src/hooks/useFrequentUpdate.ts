
import { useEffect, useState } from 'react';
import { GameState, GameDispatch } from '@/context/types';

interface FrequentUpdateProps {
  state: GameState;
  dispatch: GameDispatch;
  resourceId?: string;
}

/**
 * –•—É–∫ –¥–ª—è —á–∞—Å—Ç–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –∏–≥—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @param props - –û–±—ä–µ–∫—Ç —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º —Ä–µ—Å—É—Ä—Å–∞
 */
export const useFrequentUpdate = ({ state, dispatch, resourceId = 'default' }: FrequentUpdateProps) => {
  const [isActive, setIsActive] = useState(true);
  
  useEffect(() => {
    if (!state.gameStarted) return;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —á–∞—Å—Ç—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    const interval = 50; // 50 –º—Å (20 —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É) - –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∏ –ø–ª–∞–≤–Ω–æ—Å—Ç—å—é
    
    console.log(`üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤: ${interval}–º—Å`);
    
    // –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
    const updateInterval = setInterval(() => {
      if (isActive && state.gameStarted) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
        dispatch({ type: 'UPDATE_RESOURCES' });
      }
    }, interval);
    
    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤');
      clearInterval(updateInterval);
    };
  }, [dispatch, resourceId, isActive, state.gameStarted]);
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  return {
    setActive: setIsActive,
    isActive
  };
};

export default useFrequentUpdate;
