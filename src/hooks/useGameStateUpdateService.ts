
import { useEffect, useCallback, useRef } from 'react';
import { useGame } from '@/context/hooks/useGame';
import { UnlockService } from '@/services/UnlockService';
import { useResourceSystem } from './useResourceSystem';
import { checkAllUnlocks } from '@/utils/unlockManager';
import { safeDispatchGameEvent } from '@/context/utils/eventBusUtils';

/**
 * –•—É–∫ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
 */
export const useGameStateUpdateService = () => {
  const { state, dispatch, isPageVisible } = useGame();
  const { updateResources } = useResourceSystem();
  const unlockService = new UnlockService();
  const lastUpdateTimeRef = useRef<number>(Date.now());
  const lastLogTimeRef = useRef<number>(Date.now());
  
  // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ö–∞–Ω–∏–∑–º —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  const throttleRef = useRef({
    lastUpdateCall: Date.now(),
    throttleTime: 16, // ~60 FPS
    frameCount: 0
  });
  
  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–≥—Ä–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
   * –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
   */
  const updateGameState = useCallback(() => {
    if (!isPageVisible || !state.gameStarted) return;
    
    const now = Date.now();
    const timeSinceLastUpdate = now - throttleRef.current.lastUpdateCall;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    if (timeSinceLastUpdate < throttleRef.current.throttleTime) {
      return;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞–¥—Ä–æ–≤ –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ —Ä–µ–≥—É–ª–∏—Ä—É–µ–º —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    throttleRef.current.frameCount++;
    if (throttleRef.current.frameCount % 100 === 0) {
      // –ö–∞–∂–¥—ã–µ 100 –∫–∞–¥—Ä–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω—É–∂–Ω–æ –ª–∏ —É–≤–µ–ª–∏—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞
      const fps = 1000 / (timeSinceLastUpdate || 16);
      if (fps < 30) {
        // –ï—Å–ª–∏ FPS –ø–∞–¥–∞–µ—Ç –Ω–∏–∂–µ 30, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞
        throttleRef.current.throttleTime = Math.min(throttleRef.current.throttleTime * 1.2, 50);
        console.log(`[Perf] –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞ –¥–æ ${throttleRef.current.throttleTime.toFixed(1)}–º—Å –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ FPS`);
      } else if (fps > 55 && throttleRef.current.throttleTime > 16) {
        // –ï—Å–ª–∏ FPS —Ö–æ—Ä–æ—à–∏–π, –∏ –º—ã —Ä–∞–Ω–µ–µ —É–≤–µ–ª–∏—á–∏–≤–∞–ª–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª, —Å–Ω–∏–∂–∞–µ–º –µ–≥–æ
        throttleRef.current.throttleTime = Math.max(throttleRef.current.throttleTime * 0.9, 16);
      }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞
    throttleRef.current.lastUpdateCall = now;
    
    const currentTime = now;
    const deltaTime = currentTime - lastUpdateTimeRef.current;
    
    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—Å—É—Ä—Å—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
      updateResources(deltaTime);
      lastUpdateTimeRef.current = currentTime;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º lastUpdate –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
      dispatch({ type: 'TICK', payload: { currentTime } });
      
      // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ä–µ–∂–µ, —á–µ–º —Ä–∞–Ω—å—à–µ)
      if (now - lastLogTimeRef.current > 5000) { // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ 5 —Å–µ–∫—É–Ω–¥
        console.log(`[GameUpdate] –ü—Ä–æ—à–ª–æ ${deltaTime}–º—Å. –ò–Ω—Ç–µ—Ä–≤–∞–ª —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞: ${throttleRef.current.throttleTime.toFixed(1)}–º—Å`);
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö (—Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ)
        const activeResources = Object.entries(state.resources)
          .filter(([_, res]) => res.unlocked && Math.abs(res.perSecond) > 0.01)
          .slice(0, 5) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–≤–æ–¥–∏–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
          .map(([id, res]) => `${id}: ${res.value.toFixed(1)}/${res.max || '‚àû'} (${res.perSecond.toFixed(2)}/—Å–µ–∫)`);
        
        if (activeResources.length > 0) {
          console.log('[ResourceDebug] –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã (—Ç–æ–ø-5):', activeResources);
        }
        
        lastLogTimeRef.current = now;
      }
    } catch (error) {
      console.error('[GameStateUpdateService] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', error);
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
      throttleRef.current.throttleTime = Math.min(throttleRef.current.throttleTime * 1.5, 100);
    }
  }, [isPageVisible, state.gameStarted, dispatch, updateResources, state.resources]);
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å –Ω–∏–∑–∫–æ–π —á–∞—Å—Ç–æ—Ç–æ–π
   */
  const checkUnlocks = useCallback(() => {
    if (isPageVisible && state.gameStarted) {
      try {
        dispatch({ type: 'CHECK_UNLOCKS' });
      } catch (error) {
        console.error('[GameStateUpdateService] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫:', error);
      }
    }
  }, [isPageVisible, state.gameStarted, dispatch]);
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
  useEffect(() => {
    if (!state.gameStarted) return;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º requestAnimationFrame –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —á–∞—Å—Ç–æ—Ç–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞
    let animationFrameId: number;
    const updateFrame = () => {
      updateGameState();
      animationFrameId = requestAnimationFrame(updateFrame);
    };
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–∏–∫–ª
    animationFrameId = requestAnimationFrame(updateFrame);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    const unlockCheckInterval = setInterval(checkUnlocks, 5000);
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    console.log(`üîÑ –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–ø—É—â–µ–Ω–∞. 
      –ò–Ω—Ç–µ—Ä–≤–∞–ª —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞: ${throttleRef.current.throttleTime}–º—Å, 
      –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫: 5000–º—Å`);
    
    // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      cancelAnimationFrame(animationFrameId);
      clearInterval(unlockCheckInterval);
      console.log('üõë –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    };
  }, [updateGameState, checkUnlocks, state.gameStarted]);
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∫–ª–∞–¥–∫–∏
  useEffect(() => {
    if (!state.gameStarted) return;
    
    const handleVisibilityChange = () => {
      if (document.visibilityState === 'visible') {
        const currentTime = Date.now();
        const offlineTime = currentTime - lastUpdateTimeRef.current;
        
        if (offlineTime > 1000) { // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 1 —Å–µ–∫—É–Ω–¥—ã
          try {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            updateResources(Math.min(offlineTime, 3600000)); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è 1 —á–∞—Å–æ–º
            lastUpdateTimeRef.current = currentTime;
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä—ã
            safeDispatchGameEvent({
              message: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ! –ü—Ä–æ—à–ª–æ ${Math.floor(offlineTime / 1000)} —Å–µ–∫.`,
              type: 'info'
            });
            
            console.log(`[GameResume] –ò–≥—Ä–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ ${offlineTime}–º—Å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è.`);
          } catch (error) {
            console.error('[GameStateUpdateService] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä—ã:', error);
          }
        }
      }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
    document.addEventListener('visibilitychange', handleVisibilityChange);
    
    // –£–¥–∞–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
    };
  }, [state.gameStarted, updateResources]);
  
  return null;
};
