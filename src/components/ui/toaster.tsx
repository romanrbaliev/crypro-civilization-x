
import { useToast } from "@/hooks/use-toast"
import {
  Toast,
  ToastClose,
  ToastDescription,
  ToastProvider,
  ToastTitle,
  ToastViewport,
} from "@/components/ui/toast"
import { useEffect, useRef } from "react"
import { getUserIdentifier } from "@/api/userIdentification"
import { supabase } from "@/integrations/supabase/client"
import { checkSupabaseConnection } from "@/api/connectionUtils"
import { getHelperRequests, getEmployerHelperBuildings } from "@/api/referral/referralHelpers"

export function Toaster() {
  const { toasts } = useToast()
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const notificationsShownRef = useRef<Set<string>>(new Set());
  
  useEffect(() => {
    const storeUserId = async () => {
      try {
        const userId = await getUserIdentifier();
        if (userId) {
          window.__game_user_id = userId;
          localStorage.setItem('crypto_civ_user_id', userId);
          console.log('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ localStorage:', userId);
          
          try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é checkSupabaseConnection –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            const isConnected = await checkSupabaseConnection();
            if (isConnected) {
              console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ');
              
              // –ü–†–û–í–ï–†–ö–ê –ù–ê–ü–†–Ø–ú–£–Æ, –Ø–í–õ–Ø–ï–¢–°–Ø –õ–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ü–û–ú–û–©–ù–ò–ö–û–ú
              const { data: helperData, error: helperError } = await supabase
                .from('referral_helpers')
                .select('*')
                .eq('helper_id', userId)
                .eq('status', 'accepted');
              
              if (helperError) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ –ë–î:', helperError);
              } else if (helperData && helperData.length > 0) {
                console.log(`üåü –í–ê–ñ–ù–û: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ ${helperData.length} –∑–¥–∞–Ω–∏—è—Ö –ø–æ –¥–∞–Ω–Ω—ã–º –ë–î:`, 
                  helperData.map(h => ({
                    building_id: h.building_id,
                    employer_id: h.employer_id,
                    id: h.id
                  }))
                );
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
                setTimeout(() => {
                  // –°–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–¥–∞–Ω–∏–π
                  const helperDetailsEvent = new CustomEvent('helper-buildings-details', {
                    detail: { 
                      buildings: helperData.map(h => ({
                        buildingId: h.building_id,
                        employerId: h.employer_id
                      }))
                    }
                  });
                  window.dispatchEvent(helperDetailsEvent);
                  
                  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                  const forceUpdateEvent = new CustomEvent('force-resource-update');
                  window.dispatchEvent(forceUpdateEvent);
                  
                  // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑ API
                  const refreshEvent = new CustomEvent('refresh-referrals');
                  window.dispatchEvent(refreshEvent);
                }, 1000);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                const notificationKey = `helper-buildings-${helperData.length}`;
                if (!notificationsShownRef.current.has(notificationKey)) {
                  // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ
                  notificationsShownRef.current.add(notificationKey);
                  
                  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                  useToast().toast({
                    title: "–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –ø–æ–º–æ—â–Ω–∏–∫–æ–º",
                    description: `–í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –≤ ${helperData.length} –∑–¥–∞–Ω–∏—è—Ö, —É–≤–µ–ª–∏—á–∏–≤–∞—è –∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞ 10% –∫–∞–∂–¥–æ–µ`,
                    variant: "info"
                  });
                }
              } else {
                console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –ø–æ –¥–∞–Ω–Ω—ã–º –ë–î`);
              }
              
              // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–º–æ—â–Ω–∏–∫–∞—Ö –∏ –∑–¥–∞–Ω–∏—è—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —á–µ—Ä–µ–∑ API
              const helperResult = await getHelperRequests(userId);
              if (helperResult.success && helperResult.helpers.length > 0) {
                console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–ø—Ä–æ—Å–∞—Ö –Ω–∞ –ø–æ–º–æ—â—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', helperResult.helpers.length);
              }
              
              const employerResult = await getEmployerHelperBuildings(userId);
              if (employerResult.success && employerResult.helperBuildings.length > 0) {
                console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∑–¥–∞–Ω–∏—è—Ö —Å –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', employerResult.helperBuildings.length);
              }
            } else {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ');
            }
          } catch (e) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', e);
          }
        } else {
          console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      }
    };
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ä–∞–∑—É –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    storeUserId();
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –ë–î
    const handleRefresh = async () => {
      console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤');
      try {
        const userId = window.__game_user_id || localStorage.getItem('crypto_civ_user_id');
        if (userId) {
          console.log('–ó–∞–ø—Ä–æ—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
          const isConnected = await checkSupabaseConnection();
          if (!isConnected) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
            return;
          }
          
          console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏');
          
          // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–º–æ—â–Ω–∏–∫–æ–º –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –ë–î
          const { data: helperData, error: helperError } = await supabase
            .from('referral_helpers')
            .select('*')
            .eq('helper_id', userId)
            .eq('status', 'accepted');
          
          if (helperError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ –ë–î:', helperError);
          } else if (helperData && helperData.length > 0) {
            console.log(`üåü –í–ê–ñ–ù–û: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ ${helperData.length} –∑–¥–∞–Ω–∏—è—Ö –ø–æ –¥–∞–Ω–Ω—ã–º –ë–î:`, 
              helperData.map(h => ({
                building_id: h.building_id,
                employer_id: h.employer_id,
                id: h.id
              }))
            );
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
            setTimeout(() => {
              for (const helper of helperData) {
                // –°–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–º–æ—â–Ω–∏–∫–∞
                const helperStatusEvent = new CustomEvent('helper-status-updated', {
                  detail: { 
                    buildingId: helper.building_id,
                    status: 'accepted'
                  }
                });
                window.dispatchEvent(helperStatusEvent);
              }
              
              // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—Å—É—Ä—Å—ã
              const forceUpdateEvent = new CustomEvent('force-resource-update');
              window.dispatchEvent(forceUpdateEvent);
            }, 300);
          } else {
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –ø–æ –¥–∞–Ω–Ω—ã–º –ë–î`);
          }
          
          // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const { data: referralCodeData } = await supabase
            .from('referral_data')
            .select('referral_code')
            .eq('user_id', userId)
            .single();
            
          if (referralCodeData && referralCodeData.referral_code) {
            const referralCode = referralCodeData.referral_code;
            console.log('–ü–æ–ª—É—á–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', referralCode);
            
            // –ü–æ–ª—É—á–∞–µ–º –¢–û–õ–¨–ö–û –§–ê–ö–¢–´ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –Ω–µ –ø—ã—Ç–∞—è—Å—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å
            const { data: referrals, error: referralsError } = await supabase
              .from('referral_data')
              .select('user_id, created_at, is_activated')
              .eq('referred_by', referralCode);
              
            if (referralsError) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', referralsError);
              return;
            }
            
            console.log('–ü–æ–ª—É—á–µ–Ω—ã —Ä–µ—Ñ–µ—Ä–∞–ª—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', JSON.stringify(referrals || [], null, 2));
            
            // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Ä–µ—Ñ–µ—Ä–∞–ª—É –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
            for (const referral of (referrals || [])) {
              console.log(`–†–µ—Ñ–µ—Ä–∞–ª ${referral.user_id}, —Å—Ç–∞—Ç—É—Å –≤ –ë–î:`, {
                is_activated: referral.is_activated,
                typeOfIs_activated: typeof referral.is_activated
              });
              
              // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ —Å —Ç–æ—á–Ω—ã–º –±—É–ª–µ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏–∑ –ë–î
              const isActivatedInDb = referral.is_activated === true;
              
              console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è —Å —Ç–æ—á–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏–∑ –ë–î: ${isActivatedInDb}`);
              
              // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ UI —Å –ë–î
              const updateEvent = new CustomEvent('referral-db-status', {
                detail: { 
                  referralId: referral.user_id,
                  activated: isActivatedInDb
                }
              });
              window.dispatchEvent(updateEvent);
            }
          }
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–º–æ—â–Ω–∏–∫–∞—Ö –∏ –∑–¥–∞–Ω–∏—è—Ö —á–µ—Ä–µ–∑ API
          const helperResult = await getHelperRequests(userId);
          if (helperResult.success) {
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–ø—Ä–æ—Å–∞—Ö –Ω–∞ –ø–æ–º–æ—â—å:', helperResult.helpers.length);
          }
          
          const employerResult = await getEmployerHelperBuildings(userId);
          if (employerResult.success) {
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∑–¥–∞–Ω–∏—è—Ö —Å –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏:', employerResult.helperBuildings.length);
          }
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', error);
      }
    };
    
    window.addEventListener('refresh-referrals', handleRefresh);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤ UI
    const handleReferralDbStatus = (event) => {
      const { referralId, activated } = event.detail;
      console.log(`–ü–æ–ª—É—á–µ–Ω —Å—Ç–∞—Ç—É—Å –∏–∑ –ë–î –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞ ${referralId}: –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω=${activated}`);
      
      // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ Redux
      const stateUpdateEvent = new CustomEvent('update-referral-status', {
        detail: { 
          referralId: referralId,
          activated: activated
        }
      });
      window.dispatchEvent(stateUpdateEvent);
    };
    
    window.addEventListener('referral-db-status', handleReferralDbStatus);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    const handleReferralActivated = (event) => {
      const { referralId } = event.detail;
      console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: ${referralId}`);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –ë–î –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
      setTimeout(() => {
        const refreshEvent = new CustomEvent('refresh-referrals');
        window.dispatchEvent(refreshEvent);
      }, 500); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –ë–î
    };
    
    window.addEventListener('referral-activated', handleReferralActivated);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–æ–≤
    const handleHelperStatusUpdated = (event) => {
      const { buildingId, status } = event.detail;
      console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –∑–¥–∞–Ω–∏—è ${buildingId}: ${status}`);
      
      if (status === 'accepted') {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notificationKey = `helper-status-${buildingId}`;
        if (!notificationsShownRef.current.has(notificationKey)) {
          // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ
          notificationsShownRef.current.add(notificationKey);
          
          // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–º–æ—â–Ω–∏–∫–∞
          useToast().toast({
            title: "–í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø–æ–º–æ—â–Ω–∏–∫–æ–º",
            description: `–í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –∑–¥–∞–Ω–∏–µ. –¢–µ–ø–µ—Ä—å –≤—ã –ø—Ä–∏–Ω–æ—Å–∏—Ç–µ +10% –∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏!`,
            variant: "success"
          });
        }
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—Å—É—Ä—Å—ã
        setTimeout(() => {
          const forceUpdateEvent = new CustomEvent('force-resource-update');
          window.dispatchEvent(forceUpdateEvent);
        }, 200);
      }
    };
    
    window.addEventListener('helper-status-updated', handleHelperStatusUpdated);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ –∑–¥–∞–Ω–∏—è—Ö, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º
    const handleHelperBuildingsDetails = (event) => {
      const { buildings } = event.detail;
      console.log(`–ü–æ–ª—É—á–µ–Ω—ã –¥–µ—Ç–∞–ª–∏ –æ ${buildings.length} –∑–¥–∞–Ω–∏—è—Ö, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º:`, buildings);
      
      if (buildings.length > 0) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
        setTimeout(() => {
          const forceUpdateEvent = new CustomEvent('force-resource-update');
          window.dispatchEvent(forceUpdateEvent);
        }, 200);
      }
    };
    
    window.addEventListener('helper-buildings-details', handleHelperBuildingsDetails);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ –∑–¥–∞–Ω–∏—è—Ö —Å –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏ —É —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è
    const handleEmployerBuildingsHelpers = (event) => {
      const { helperBuildings } = event.detail;
      console.log(`–ü–æ–ª—É—á–µ–Ω—ã –¥–µ—Ç–∞–ª–∏ –æ ${helperBuildings.length} –∑–¥–∞–Ω–∏—è—Ö —Å –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏ —É —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è:`, helperBuildings);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      const notificationKey = `employer-buildings-${helperBuildings.length}`;
      if (helperBuildings.length > 0 && !notificationsShownRef.current.has(notificationKey)) {
        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ
        notificationsShownRef.current.add(notificationKey);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
        useToast().toast({
          title: "–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏",
          description: `–£ –≤–∞—Å ${helperBuildings.length} ${helperBuildings.length === 1 ? '–∑–¥–∞–Ω–∏–µ' : '–∑–¥–∞–Ω–∏–π'} —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏`,
          variant: "info"
        });
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—Å—É—Ä—Å—ã
        setTimeout(() => {
          const forceUpdateEvent = new CustomEvent('force-resource-update');
          window.dispatchEvent(forceUpdateEvent);
        }, 200);
      }
    };
    
    window.addEventListener('employer-buildings-helpers', handleEmployerBuildingsHelpers);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    const initialUpdateTimer = setTimeout(() => {
      const refreshEvent = new CustomEvent('refresh-referrals');
      window.dispatchEvent(refreshEvent);
      console.log('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤');
    }, 2000);
    
    return () => {
      window.removeEventListener('refresh-referrals', handleRefresh);
      window.removeEventListener('referral-db-status', handleReferralDbStatus);
      window.removeEventListener('referral-activated', handleReferralActivated);
      window.removeEventListener('helper-status-updated', handleHelperStatusUpdated);
      window.removeEventListener('helper-buildings-details', handleHelperBuildingsDetails);
      window.removeEventListener('employer-buildings-helpers', handleEmployerBuildingsHelpers);
      clearTimeout(initialUpdateTimer);
    };
  }, []);

  return (
    <ToastProvider>
      {toasts.map(function ({ id, title, description, action, ...props }) {
        return (
          <Toast key={id} {...props}>
            <div className="grid gap-1">
              {title && <ToastTitle>{title}</ToastTitle>}
              {description && (
                <ToastDescription>{description}</ToastDescription>
              )}
            </div>
            {action}
            <ToastClose />
          </Toast>
        )
      })}
      <ToastViewport />
    </ToastProvider>
  )
}
