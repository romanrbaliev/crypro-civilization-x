
import React, { createContext, useReducer, useEffect, ReactNode, useState } from 'react';
import { GameState, GameAction, Resource, Building, Upgrade } from './types';
import { initialState } from './initialState';
import { gameReducer } from './gameReducer';
import { saveGameState, loadGameState } from './utils/gameStorage';
import { GameEventSystem } from './GameEventSystem';
import { isTelegramWebAppAvailable } from '@/utils/helpers';
import { toast } from "@/hooks/use-toast";

export type { Resource, Building, Upgrade };

// –¢–∏–ø –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–≥—Ä—ã
export interface GameContextProps {
  state: GameState;
  dispatch: React.Dispatch<GameAction>;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
export const GameContext = createContext<GameContextProps | undefined>(undefined);

// –≠–∫—Å–ø–æ—Ä—Ç —Ö—É–∫–∞ useGame –ø–µ—Ä–µ–µ—Ö–∞–ª –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
export { useGame } from './hooks/useGame';

// –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–æ 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –º–µ–Ω—å—à–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏)
const SAVE_INTERVAL = 15 * 1000;

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ (7 —Å–µ–∫—É–Ω–¥)
const LOAD_TIMEOUT = 7000;

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
let loadMessageShown = false;
let saveMessageShown = false;

// –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π)
let lastSaveTime = 0;
// –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
let isSavingInProgress = false;

interface GameProviderProps {
  children: ReactNode;
}

export function GameProvider({ children }: GameProviderProps) {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã
  const [loadedState, setLoadedState] = useState<GameState | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [loadingMessage, setLoadingMessage] = useState("–ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä—ã...");
  
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
  const isMountedRef = React.useRef(false);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
  useEffect(() => {
    if (isMountedRef.current) return;
    isMountedRef.current = true;
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram WebApp –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ GameProvider...');
    if (isTelegramWebAppAvailable()) {
      console.log('‚úÖ Telegram WebApp –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
      try {
        const tg = window.Telegram.WebApp;
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        if (typeof tg.ready === 'function') {
          tg.ready();
          console.log('‚úÖ Telegram WebApp ready –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
        }
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
          console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: id=${tg.initDataUnsafe.user.id}, username=${tg.initDataUnsafe.user.username || '–Ω–µ—Ç'}`);
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error);
      }
    } else {
      console.log('‚ÑπÔ∏è Telegram WebApp –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞');
    }
  }, []);
  
  // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
  const saveGame = async (gameState: GameState) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–¥–µ—Ç –ª–∏ —É–∂–µ –ø—Ä–æ—Ü–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    if (isSavingInProgress) {
      console.log('‚è≥ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä–æ—Å—Å–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
    const now = Date.now();
    if (now - lastSaveTime < 2000) { // 2 —Å–µ–∫—É–Ω–¥—ã –º–∏–Ω–∏–º—É–º –º–µ–∂–¥—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–º–∏
      console.log(`‚è±Ô∏è –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–ø—Ä–æ—à–ª–æ ${now - lastSaveTime}–º—Å)`);
      return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥–∏
    isSavingInProgress = true;
    lastSaveTime = now;
    
    try {
      await saveGameState(gameState);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä—ã:', error);
    } finally {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
      isSavingInProgress = false;
    }
  };
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
  useEffect(() => {
    const loadSavedGame = async () => {
      try {
        setLoadingMessage("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...");
        console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–≥—Ä—ã...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
        await new Promise(resolve => setTimeout(resolve, 800));
        
        setLoadingMessage("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã...");
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        const loadTimeoutId = setTimeout(() => {
          console.warn('‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏, –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É');
          setLoadedState(null);
          setIsLoading(false);
          
          if (!loadMessageShown && process.env.NODE_ENV !== 'development') {
            loadMessageShown = true;
            toast({
              title: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
              description: "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏. –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É.",
              variant: "destructive",
            });
          }
        }, LOAD_TIMEOUT);
        
        const savedState = await loadGameState();
        
        // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–∞—É—Ç, –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ
        clearTimeout(loadTimeoutId);
        
        console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', savedState ? '–Ω–∞–π–¥–µ–Ω–æ' : '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        
        setLoadedState(savedState);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
        if (savedState && !loadMessageShown && process.env.NODE_ENV !== 'development') {
          loadMessageShown = true;
          // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ–≥–æ UX
          setTimeout(() => {
            toast({
              title: "–ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
              description: "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
              variant: "default",
            });
          }, 1000);
        } else if (!savedState && !loadMessageShown && process.env.NODE_ENV !== 'development') {
          loadMessageShown = true;
          // –ï—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          toast({
            title: "–ù–æ–≤–∞—è –∏–≥—Ä–∞",
            description: "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É.",
            variant: "default",
          });
        }
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', err);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if (!loadMessageShown && process.env.NODE_ENV !== 'development') {
          loadMessageShown = true;
          toast({
            title: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
            description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∏–≥—Ä—É. –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É.",
            variant: "destructive",
          });
        }
      } finally {
        setIsLoading(false);
      }
    };
    
    loadSavedGame();
  }, []);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Ä–µ–¥—å—é—Å–µ—Ä —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
  const [state, dispatch] = useReducer(
    gameReducer, 
    loadedState || { ...initialState, gameStarted: true, lastUpdate: Date.now(), lastSaved: Date.now() }
  );
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  useEffect(() => {
    if (!state.gameStarted || isLoading) return;
    
    const intervalId = setInterval(() => {
      dispatch({ type: 'UPDATE_RESOURCES' });
    }, 1000);
    
    return () => clearInterval(intervalId);
  }, [state.gameStarted, isLoading]);
  
  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç —á–∞—Å—Ç—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π
  useEffect(() => {
    if (!state.gameStarted || isLoading) return;
    
    console.log('üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä—ã');
    
    // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    const initialSaveTimeout = setTimeout(() => {
      saveGame(state);
    }, 2000);
    
    // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    const intervalId = setInterval(() => {
      saveGame(state);
    }, SAVE_INTERVAL);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      clearTimeout(initialSaveTimeout);
      clearInterval(intervalId);
      console.log('üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏');
      saveGame(state);
    };
  }, [state, isLoading]);
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏/–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–æ–∫
  useEffect(() => {
    if (!state.gameStarted || isLoading) return;
    
    const handleVisibilityChange = () => {
      if (document.visibilityState === 'hidden') {
        console.log('üîÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫—Ä—ã—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
        saveGame(state);
      }
    };
    
    const handleBeforeUnload = () => {
      console.log('üîÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
      saveGame(state);
    };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ –æ–∫–Ω–æ–º (–æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤)
    const handleBlur = () => {
      console.log('üîÑ –û–∫–Ω–æ –ø–æ—Ç–µ—Ä—è–ª–æ —Ñ–æ–∫—É—Å, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
      saveGame(state);
    };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω (–¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    const handleOnline = () => {
      console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
      saveGame(state);
      
      if (!saveMessageShown && process.env.NODE_ENV !== 'development') {
        saveMessageShown = true;
        toast({
          title: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
          description: "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ü—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω.",
          variant: "default",
        });
      }
    };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –æ—Ñ–ª–∞–π–Ω
    const handleOffline = () => {
      console.log('‚ö†Ô∏è –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ç—å—é –ø–æ—Ç–µ—Ä—è–Ω–æ');
      
      if (!saveMessageShown && process.env.NODE_ENV !== 'development') {
        saveMessageShown = true;
        toast({
          title: "–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º",
          description: "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø–æ—Ç–µ—Ä—è–Ω–æ. –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ.",
          variant: "warning",
        });
      }
    };
    
    document.addEventListener('visibilitychange', handleVisibilityChange);
    window.addEventListener('beforeunload', handleBeforeUnload);
    window.addEventListener('blur', handleBlur);
    window.addEventListener('online', handleOnline);
    window.addEventListener('offline', handleOffline);
    
    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
      window.removeEventListener('beforeunload', handleBeforeUnload);
      window.removeEventListener('blur', handleBlur);
      window.removeEventListener('online', handleOnline);
      window.removeEventListener('offline', handleOffline);
    };
  }, [state, isLoading]);
  
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏
  if (isLoading) {
    return (
      <div className="flex flex-col items-center justify-center h-screen bg-gradient-to-b from-gray-900 to-gray-800 text-white">
        <div className="w-16 h-16 border-t-4 border-blue-500 border-solid rounded-full animate-spin mb-4"></div>
        <div className="text-xl font-bold mb-2">{loadingMessage}</div>
        <div className="text-sm text-gray-300">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...</div>
      </div>
    );
  }
  
  return (
    <GameContext.Provider value={{ state, dispatch }}>
      <GameEventSystem />
      {children}
    </GameContext.Provider>
  );
}
