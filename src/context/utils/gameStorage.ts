
import { GameState } from '../types';
import { initialState } from '../initialState';
import { isTelegramCloudStorageAvailable } from '@/utils/helpers';
import { saveGameToServer, loadGameFromServer } from '@/api/gameDataService';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ —Å –∏–º–µ–Ω–µ–º –∫–ª—é—á–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
export const GAME_STORAGE_KEY = 'cryptoCivilizationSave';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ localStorage
const isLocalStorageAvailable = () => {
  try {
    const testKey = '__test__';
    localStorage.setItem(testKey, testKey);
    localStorage.removeItem(testKey);
    return true;
  } catch (e) {
    console.warn('localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:', e);
    return false;
  }
};

// –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å—Ä–µ–¥, –≥–¥–µ localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
let memoryStorage: Record<string, string> = {};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
export async function saveGameState(state: GameState): Promise<boolean> {
  try {
    // –û–±–Ω–æ–≤–ª—è–µ–º timestamp –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    const stateToSave = {
      ...state,
      lastSaved: Date.now()
    };
    
    console.log(`üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä—ã (—Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: ~${JSON.stringify(stateToSave).length} –±–∞–π—Ç)`);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥)
    const serverSaved = await saveGameToServer(stateToSave);
    
    // –ï—Å–ª–∏ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
    if (serverSaved) {
      console.log('‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', new Date().toLocaleTimeString());
      return true;
    }
    
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
    
    const serializedState = JSON.stringify(stateToSave);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    if (isLocalStorageAvailable()) {
      try {
        localStorage.setItem(GAME_STORAGE_KEY, serializedState);
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage');
        return true;
      } catch (localStorageError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ localStorage:', localStorageError);
      }
    }

    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞–º—è—Ç—å
    memoryStorage[GAME_STORAGE_KEY] = serializedState;
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–º—è—Ç–∏ (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ)');
    return true;
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã:', error);
    
    // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å
    try {
      memoryStorage[GAME_STORAGE_KEY] = JSON.stringify({
        ...state,
        lastSaved: Date.now()
      });
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–º—è—Ç–∏ (–∞–≤–∞—Ä–∏–π–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ)');
      return true;
    } catch (e) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–∂–µ –≤ –ø–∞–º—è—Ç—å:', e);
      return false;
    }
  }
}

// –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä
function deepMerge(target: any, source: any): any {
  const output = { ...target };
  
  for (const key in source) {
    if (source.hasOwnProperty(key)) {
      if (
        typeof source[key] === 'object' && 
        source[key] !== null &&
        !Array.isArray(source[key])
      ) {
        if (key in target && typeof target[key] === 'object' && target[key] !== null) {
          output[key] = deepMerge(target[key], source[key]);
        } else {
          output[key] = { ...source[key] };
        }
      } else {
        output[key] = source[key];
      }
    }
  }
  
  return output;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
export async function loadGameState(): Promise<GameState | null> {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–≥—Ä—ã...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥)
    const serverState = await loadGameFromServer();
    
    if (serverState) {
      console.log(`‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞ (lastSaved: ${new Date(serverState.lastSaved || 0).toLocaleTimeString() || '–Ω–µ –∑–∞–¥–∞–Ω–æ'})`);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª—É–±–æ–∫–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–ª–∏—è–Ω–∏—è –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
      const mergedState = deepMerge(initialState, serverState);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      mergedState.lastUpdate = Date.now();
      
      return mergedState;
    }
    
    console.log('‚ÑπÔ∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞');
    
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞, –ø—Ä–æ–±—É–µ–º localStorage
    if (isLocalStorageAvailable()) {
      const serializedState = localStorage.getItem(GAME_STORAGE_KEY);
      
      if (serializedState) {
        try {
          const loadedState = JSON.parse(serializedState) as GameState;
          console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –∏–∑ localStorage (lastSaved: ${new Date(loadedState.lastSaved || 0).toLocaleTimeString() || '–Ω–µ –∑–∞–¥–∞–Ω–æ'})`);
          
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª—É–±–æ–∫–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–ª–∏—è–Ω–∏—è –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
          const mergedState = deepMerge(initialState, loadedState);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          mergedState.lastUpdate = Date.now();
          
          return mergedState;
        } catch (parseError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:', parseError);
        }
      }
    }
    
    // –ü—Ä–æ–±—É–µ–º –∏–∑ –ø–∞–º—è—Ç–∏, –µ—Å–ª–∏ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ
    if (memoryStorage[GAME_STORAGE_KEY]) {
      try {
        const loadedState = JSON.parse(memoryStorage[GAME_STORAGE_KEY]) as GameState;
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –∏–∑ –ø–∞–º—è—Ç–∏ (lastSaved: ${new Date(loadedState.lastSaved || 0).toLocaleTimeString() || '–Ω–µ –∑–∞–¥–∞–Ω–æ'})`);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª—É–±–æ–∫–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–ª–∏—è–Ω–∏—è –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
        const mergedState = deepMerge(initialState, loadedState);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        mergedState.lastUpdate = Date.now();
        
        return mergedState;
      } catch (parseError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–∞–º—è—Ç–∏:', parseError);
      }
    }
    
    console.log('‚ùå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –≤ –æ–¥–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É');
    return null;
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã:', error);
    return null;
  }
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
export async function clearGameState(): Promise<void> {
  try {
    console.log('üîÑ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –∏–≥—Ä—ã...');
    
    // –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
    // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å API –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è
    
    // –£–¥–∞–ª—è–µ–º –∏–∑ localStorage, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    if (isLocalStorageAvailable()) {
      localStorage.removeItem(GAME_STORAGE_KEY);
      console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ localStorage');
    }
    
    // –£–¥–∞–ª—è–µ–º –∏–∑ –ø–∞–º—è—Ç–∏
    delete memoryStorage[GAME_STORAGE_KEY];
    console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –ø–∞–º—è—Ç–∏');
    
    console.log('‚úÖ –í—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã');
  } catch (error) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä—ã:', error);
  }
}
