
import { GameState } from '@/context/types';
import { safeDispatchGameEvent } from '@/context/utils/eventBusUtils';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º–∏ –∏–≥—Ä–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑—É–µ—Ç –≤—Å—é –ª–æ–≥–∏–∫—É —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ–µ –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ.
 */
export class UnlockService {
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
   */
  public checkAllUnlocks(state: GameState): GameState {
    console.log('UnlockService: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫');
    
    let newState = { ...state };
    let anyUnlockApplied = false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    newState = this.checkResourceUnlocks(newState);
    newState = this.checkBuildingUnlocks(newState);
    newState = this.checkUpgradeUnlocks(newState);
    newState = this.checkActionUnlocks(newState);
    newState = this.checkSpecialUnlocks(newState);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å–æ–±—ã–π —Å–ª—É—á–∞–π —Å USDT
    newState = this.enforceUsdtUnlockRules(newState);
    
    return newState;
  }

  /**
   * –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å –Ω—É–ª—è
   */
  public rebuildAllUnlocks(state: GameState): GameState {
    console.log('UnlockService: –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫');
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è, –Ω–æ –Ω–µ –∫–æ–ø–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è unlocked,
    // –æ–Ω–∏ –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–Ω–æ–≤–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏–π
    let newState = JSON.parse(JSON.stringify(state));
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
    return this.checkAllUnlocks(newState);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
   */
  private checkResourceUnlocks(state: GameState): GameState {
    console.log('UnlockService: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤');
    
    let newState = { ...state };
    
    // USDT —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
    if (this.shouldUnlockUsdt(newState)) {
      newState = this.unlockUsdt(newState);
    }
    
    // –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ
    if (this.shouldUnlockElectricity(newState)) {
      newState = this.unlockElectricity(newState);
    }
    
    // –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å
    if (this.shouldUnlockComputingPower(newState)) {
      newState = this.unlockComputingPower(newState);
    }
    
    // Bitcoin
    if (this.shouldUnlockBitcoin(newState)) {
      newState = this.unlockBitcoin(newState);
    }
    
    return newState;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–¥–∞–Ω–∏–π
   */
  private checkBuildingUnlocks(state: GameState): GameState {
    console.log('UnlockService: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∑–¥–∞–Ω–∏–π');
    
    let newState = { ...state };
    
    // Practice (–ü—Ä–∞–∫—Ç–∏–∫–∞)
    if (this.shouldUnlockPractice(newState)) {
      newState = this.unlockPractice(newState);
    }
    
    // Generator (–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä)
    if (this.shouldUnlockGenerator(newState)) {
      newState = this.unlockGenerator(newState);
    }
    
    // Home Computer (–î–æ–º–∞—à–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä)
    if (this.shouldUnlockHomeComputer(newState)) {
      newState = this.unlockHomeComputer(newState);
    }
    
    // Crypto Wallet (–ö—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫)
    if (this.shouldUnlockCryptoWallet(newState)) {
      newState = this.unlockCryptoWallet(newState);
    }
    
    return newState;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π
   */
  private checkUpgradeUnlocks(state: GameState): GameState {
    console.log('UnlockService: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —É–ª—É—á—à–µ–Ω–∏–π');
    
    let newState = { ...state };
    
    // –î—Ä—É–≥–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π
    // ...
    
    return newState;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
   */
  private checkActionUnlocks(state: GameState): GameState {
    console.log('UnlockService: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π');
    
    let newState = { ...state };
    
    // Apply Knowledge
    if (state.counters.knowledgeClicks && state.counters.knowledgeClicks.value >= 3 && !state.unlocks.applyKnowledge) {
      console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Apply Knowledge: —Å—á–µ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ >= 3');
      
      newState = {
        ...newState,
        unlocks: {
          ...newState.unlocks,
          applyKnowledge: true
        }
      };
    }
    
    return newState;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
   */
  private checkSpecialUnlocks(state: GameState): GameState {
    console.log('UnlockService: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫');
    
    let newState = { ...state };
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ Practice –ø–æ—Å–ª–µ 2-–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π
    const applyKnowledgeCounter = state.counters.applyKnowledge;
    if (applyKnowledgeCounter) {
      const applyKnowledgeCount = typeof applyKnowledgeCounter === 'object' 
        ? applyKnowledgeCounter.value 
        : applyKnowledgeCounter;

      if (applyKnowledgeCount >= 2 && (!state.unlocks.practice || !state.buildings.practice?.unlocked)) {
        console.log("UnlockService: üîç –û—Å–æ–±–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Practice: —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π >= 2");
        
        newState = this.unlockPractice(newState);
      }
    }
    
    return newState;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ USDT
   */
  private enforceUsdtUnlockRules(state: GameState): GameState {
    console.log('UnlockService: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ—Å–æ–±—ã—Ö –ø—Ä–∞–≤–∏–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ USDT');
    
    // –ï—Å–ª–∏ —É–∂–µ —è–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ USDT –≤ unlocks, —Ç–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å
    if (state.unlocks.usdt === true && state.resources.usdt && !state.resources.usdt.unlocked) {
      console.log('UnlockService: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ USDT –∏–∑ —Ñ–ª–∞–≥–∞ unlocks');
      
      return {
        ...state,
        resources: {
          ...state.resources,
          usdt: {
            ...state.resources.usdt,
            unlocked: true
          }
        }
      };
    }
    
    // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å USDT —É–∂–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, —Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if (state.resources.usdt && state.resources.usdt.unlocked && !state.unlocks.usdt) {
      console.log('UnlockService: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ USDT –∏–∑ —Ä–µ—Å—É—Ä—Å–∞');
      
      return {
        ...state,
        unlocks: {
          ...state.unlocks,
          usdt: true
        }
      };
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π >= 1, –∏ –µ—Å–ª–∏ –¥–∞, —Ç–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º USDT
    const applyKnowledgeCounter = state.counters.applyKnowledge;
    if (applyKnowledgeCounter) {
      const applyKnowledgeCount = typeof applyKnowledgeCounter === 'object' 
        ? applyKnowledgeCounter.value 
        : applyKnowledgeCounter;
        
      if (applyKnowledgeCount >= 1) {
        console.log('UnlockService: –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ USDT –ø–æ —Å—á–µ—Ç—á–∏–∫—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π >= 1');
        
        return this.unlockUsdt(state);
      }
    }
    
    return state;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ USDT
   */
  private shouldUnlockUsdt(state: GameState): boolean {
    // USDT —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π –∏–ª–∏ –µ—Å–ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    const counter = state.counters.applyKnowledge;
    const value = counter ? (typeof counter === 'object' ? counter.value : counter) : 0;
    const usdtResourceUnlocked = state.resources.usdt && state.resources.usdt.unlocked;
    const usdtFlagUnlocked = state.unlocks.usdt === true;
    
    console.log('UnlockService - shouldUnlockUsdt:', {
      counterValue: value,
      usdtResourceUnlocked,
      usdtFlagUnlocked
    });
    
    return (value >= 1 || usdtFlagUnlocked) && !usdtResourceUnlocked;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏
   */
  private shouldUnlockPractice(state: GameState): boolean {
    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π
    const counter = state.counters.applyKnowledge;
    const value = counter ? (typeof counter === 'object' ? counter.value : counter) : 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∑–¥–∞–Ω–∏—è –ø—Ä–∞–∫—Ç–∏–∫–∏
    const practiceExists = !!state.buildings.practice;
    const practiceUnlocked = practiceExists && state.buildings.practice.unlocked;
    const practiceInUnlocks = state.unlocks.practice === true;
    
    console.log('UnlockService - shouldUnlockPractice:', {
      applyKnowledge: value,
      practiceExists,
      practiceUnlocked: practiceUnlocked ? '–î–∞' : '–ù–µ—Ç',
      practiceInUnlocks: practiceInUnlocks ? '–î–∞' : '–ù–µ—Ç',
      result: value >= 2 && (!practiceUnlocked || !practiceInUnlocks)
    });
    
    // –ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ 2-—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π –∑–Ω–∞–Ω–∏–π
    return value >= 2 && (!practiceUnlocked || !practiceInUnlocks);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
   */
  private shouldUnlockGenerator(state: GameState): boolean {
    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ USDT
    const usdtValue = state.resources.usdt?.value || 0;
    const usdtUnlocked = state.resources.usdt?.unlocked || false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    const generatorUnlocked = state.buildings.generator && state.buildings.generator.unlocked;
    
    console.log('UnlockService - shouldUnlockGenerator:', {
      usdtValue,
      usdtUnlocked,
      generatorUnlocked: generatorUnlocked ? '–î–∞' : '–ù–µ—Ç',
      result: usdtValue >= 11 && usdtUnlocked && !generatorUnlocked
    });
    
    // –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 11 USDT
    return usdtValue >= 11 && usdtUnlocked && !generatorUnlocked;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–æ–º–∞—à–Ω–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
   */
  private shouldUnlockHomeComputer(state: GameState): boolean {
    // –ö–æ–º–ø—å—é—Ç–µ—Ä —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ 10+ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞
    return state.resources.electricity && 
           state.resources.electricity.unlocked && 
           state.resources.electricity.value >= 10 && 
           (!state.buildings.homeComputer || !state.buildings.homeComputer.unlocked);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—å–∫–∞
   */
  private shouldUnlockCryptoWallet(state: GameState): boolean {
    // –ö–æ—à–µ–ª–µ–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è Blockchain Basics
    return state.upgrades.blockchainBasics && 
           state.upgrades.blockchainBasics.purchased && 
           (!state.buildings.cryptoWallet || !state.buildings.cryptoWallet.unlocked);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏
   */
  private shouldUnlockComputingPower(state: GameState): boolean {
    // –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞
    return state.resources.electricity && 
           state.resources.electricity.unlocked && 
           state.buildings.homeComputer && 
           state.buildings.homeComputer.count > 0 && 
           (!state.resources.computingPower || !state.resources.computingPower.unlocked);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Bitcoin
   */
  private shouldUnlockBitcoin(state: GameState): boolean {
    // Bitcoin —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏
    return state.resources.computingPower && 
           state.resources.computingPower.unlocked && 
           (!state.resources.bitcoin || !state.resources.bitcoin.unlocked);
  }

  /**
   * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ—Å—É—Ä—Å USDT
   */
  private unlockUsdt(state: GameState): GameState {
    console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ USDT');
    
    let updatedResources = { ...state.resources };
    
    // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å USDT –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!updatedResources.usdt) {
      updatedResources.usdt = {
        id: 'usdt',
        name: 'USDT',
        description: '–°—Ç–µ–π–±–ª–∫–æ–∏–Ω, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ–ª–ª–∞—Ä–∞ –°–®–ê',
        value: 0,
        baseProduction: 0,
        production: 0,
        perSecond: 0,
        max: 50,
        unlocked: true,
        type: 'currency',
        icon: 'dollar'
      };
    } else {
      // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å USDT —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ unlocked
      updatedResources.usdt = {
        ...updatedResources.usdt,
        unlocked: true
      };
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return {
      ...state,
      resources: updatedResources,
      unlocks: {
        ...state.unlocks,
        usdt: true
      }
    };
  }

  /**
   * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ—Å—É—Ä—Å Electricity
   */
  private unlockElectricity(state: GameState): GameState {
    console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Electricity');
    
    let updatedResources = { ...state.resources };
    
    // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å Electricity –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!updatedResources.electricity) {
      updatedResources.electricity = {
        id: 'electricity',
        name: '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ',
        description: '–≠–Ω–µ—Ä–≥–∏—è –¥–ª—è –ø–∏—Ç–∞–Ω–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
        value: 0,
        baseProduction: 0,
        production: 0,
        perSecond: 0,
        max: 1000,
        unlocked: true,
        type: 'resource',
        icon: 'zap'
      };
    } else {
      // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å Electricity —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ unlocked
      updatedResources.electricity = {
        ...updatedResources.electricity,
        unlocked: true
      };
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return {
      ...state,
      resources: updatedResources,
      unlocks: {
        ...state.unlocks,
        electricity: true
      }
    };
  }

  /**
   * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–¥–∞–Ω–∏–µ Practice
   */
  private unlockPractice(state: GameState): GameState {
    console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Practice');
    
    let updatedBuildings = { ...state.buildings };
    
    // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!updatedBuildings.practice) {
      updatedBuildings.practice = {
        id: 'practice',
        name: '–ü—Ä–∞–∫—Ç–∏–∫–∞',
        description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∑–Ω–∞–Ω–∏–π',
        cost: { usdt: 10 },
        count: 0,
        unlocked: true,
        costMultiplier: 1.15,
        production: { knowledge: 0.63 },
        consumption: {},
        productionBoost: 0,
        unlockedBy: 'applyKnowledge_2'
      };
    } else {
      // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ unlocked
      updatedBuildings.practice = {
        ...updatedBuildings.practice,
        unlocked: true
      };
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return {
      ...state,
      buildings: updatedBuildings,
      unlocks: {
        ...state.unlocks,
        practice: true
      }
    };
  }

  /**
   * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–¥–∞–Ω–∏–µ Generator
   */
  private unlockGenerator(state: GameState): GameState {
    console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Generator');
    
    let updatedBuildings = { ...state.buildings };
    
    // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!updatedBuildings.generator) {
      updatedBuildings.generator = {
        id: 'generator',
        name: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä',
        description: '–í—ã—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ',
        cost: { usdt: 25 },
        count: 0,
        unlocked: true,
        costMultiplier: 1.15,
        production: { electricity: 0.5 },
        consumption: {},
        productionBoost: 0,
        unlockedBy: 'usdt_11'
      };
    } else {
      // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ unlocked
      updatedBuildings.generator = {
        ...updatedBuildings.generator,
        unlocked: true
      };
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return {
      ...state,
      buildings: updatedBuildings,
      unlocks: {
        ...state.unlocks,
        generator: true
      }
    };
  }

  /**
   * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–¥–∞–Ω–∏–µ Home Computer
   */
  private unlockHomeComputer(state: GameState): GameState {
    console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Home Computer');
    
    let updatedBuildings = { ...state.buildings };
    
    // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!updatedBuildings.homeComputer) {
      updatedBuildings.homeComputer = {
        id: 'homeComputer',
        name: '–î–æ–º–∞—à–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä',
        description: '–°–æ–∑–¥–∞–µ—Ç –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å',
        cost: { usdt: 30 },
        count: 0,
        unlocked: true,
        costMultiplier: 1.15,
        production: { computingPower: 2 },
        consumption: { electricity: 1 },
        productionBoost: 0,
        unlockedBy: 'electricity_10'
      };
    } else {
      // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ unlocked
      updatedBuildings.homeComputer = {
        ...updatedBuildings.homeComputer,
        unlocked: true
      };
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return {
      ...state,
      buildings: updatedBuildings,
      unlocks: {
        ...state.unlocks,
        homeComputer: true
      }
    };
  }

  /**
   * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–¥–∞–Ω–∏–µ Crypto Wallet
   */
  private unlockCryptoWallet(state: GameState): GameState {
    console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Crypto Wallet');
    
    let updatedBuildings = { ...state.buildings };
    
    // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!updatedBuildings.cryptoWallet) {
      updatedBuildings.cryptoWallet = {
        id: 'cryptoWallet',
        name: '–ö—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫',
        description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç',
        cost: { usdt: 15, knowledge: 25 },
        count: 0,
        unlocked: true,
        costMultiplier: 1.15,
        production: {},
        consumption: {},
        productionBoost: 0,
        unlockedBy: 'blockchainBasics'
      };
    } else {
      // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ unlocked
      updatedBuildings.cryptoWallet = {
        ...updatedBuildings.cryptoWallet,
        unlocked: true
      };
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return {
      ...state,
      buildings: updatedBuildings,
      unlocks: {
        ...state.unlocks,
        cryptoWallet: true
      }
    };
  }

  /**
   * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ—Å—É—Ä—Å Computing Power
   */
  private unlockComputingPower(state: GameState): GameState {
    console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Computing Power');
    
    let updatedResources = { ...state.resources };
    
    // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!updatedResources.computingPower) {
      updatedResources.computingPower = {
        id: 'computingPower',
        name: '–í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å',
        description: '–ú–æ—â–Ω–æ—Å—Ç—å –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏ –º–∞–π–Ω–∏–Ω–≥–∞',
        value: 0,
        baseProduction: 0,
        production: 0,
        perSecond: 0,
        max: 500,
        unlocked: true,
        type: 'resource',
        icon: 'cpu'
      };
    } else {
      // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ unlocked
      updatedResources.computingPower = {
        ...updatedResources.computingPower,
        unlocked: true
      };
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return {
      ...state,
      resources: updatedResources,
      unlocks: {
        ...state.unlocks,
        computingPower: true
      }
    };
  }

  /**
   * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ—Å—É—Ä—Å Bitcoin
   */
  private unlockBitcoin(state: GameState): GameState {
    console.log('UnlockService: üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Bitcoin');
    
    let updatedResources = { ...state.resources };
    
    // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!updatedResources.bitcoin) {
      updatedResources.bitcoin = {
        id: 'bitcoin',
        name: 'Bitcoin',
        description: '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, –¥–æ–±—ã–≤–∞–µ–º–∞—è –º–∞–π–Ω–∏–Ω–≥–æ–º',
        value: 0,
        baseProduction: 0,
        production: 0,
        perSecond: 0,
        max: 0.01,
        unlocked: true,
        type: 'currency',
        icon: 'bitcoin'
      };
    } else {
      // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ unlocked
      updatedResources.bitcoin = {
        ...updatedResources.bitcoin,
        unlocked: true
      };
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return {
      ...state,
      resources: updatedResources,
      unlocks: {
        ...state.unlocks,
        bitcoin: true
      }
    };
  }
}
