
import { GameState } from '@/context/types';

export class GameStateService {
  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
   * @param state –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   * @returns –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   */
  public processGameStateUpdate(state: GameState): GameState {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∑–¥–∞–Ω–∏–π
    state = this.checkBuildingUnlocks(state);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —É–ª—É—á—à–µ–Ω–∏–π
    state = this.checkUpgradeUnlocks(state);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
    state = this.checkSpecialConditions(state);
    
    return state;
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–¥–∞–Ω–∏–π
   * @param state –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   * @returns –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   */
  private checkBuildingUnlocks(state: GameState): GameState {
    const updatedBuildings = { ...state.buildings };
    const updatedUnlocks = { ...state.unlocks };
    let isUpdated = false;
    
    // –ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ 2+ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π –∑–Ω–∞–Ω–∏–π
    if (state.counters.applyKnowledge?.value >= 2 && 
        updatedBuildings.practice && 
        !updatedBuildings.practice.unlocked) {
      updatedBuildings.practice.unlocked = true;
      updatedUnlocks.practice = true;
      isUpdated = true;
      console.log('üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–¥–∞–Ω–∏–µ: –ü—Ä–∞–∫—Ç–∏–∫–∞');
    }
    
    // –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è 11+ USDT
    if (state.resources.usdt?.value >= 11 && 
        updatedBuildings.generator && 
        !updatedBuildings.generator.unlocked) {
      updatedBuildings.generator.unlocked = true;
      updatedUnlocks.generator = true;
      isUpdated = true;
      console.log('üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–¥–∞–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (isUpdated) {
      return {
        ...state,
        buildings: updatedBuildings,
        unlocks: updatedUnlocks
      };
    }
    
    return state;
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π
   * @param state –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   * @returns –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   */
  private checkUpgradeUnlocks(state: GameState): GameState {
    const updatedUpgrades = { ...state.upgrades };
    const updatedUnlocks = { ...state.unlocks };
    let isUpdated = false;
    
    // –û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    if (state.buildings.generator?.count > 0 && 
        updatedUpgrades.blockchainBasics && 
        !updatedUpgrades.blockchainBasics.unlocked) {
      updatedUpgrades.blockchainBasics.unlocked = true;
      updatedUnlocks.blockchainBasics = true;
      updatedUnlocks.research = true;
      isUpdated = true;
      console.log('üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: –û—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (isUpdated) {
      return {
        ...state,
        upgrades: updatedUpgrades,
        unlocks: updatedUnlocks
      };
    }
    
    return state;
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
   * @param state –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   * @returns –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   */
  private checkSpecialConditions(state: GameState): GameState {
    const updatedUnlocks = { ...state.unlocks };
    let isUpdated = false;
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤–∫–ª–∞–¥–∫–∏ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è" –ø–æ—Å–ª–µ 3+ –∫–ª–∏–∫–æ–≤ –Ω–∞ "–ò–∑—É—á–∏—Ç—å –∫—Ä–∏–ø—Ç—É"
    if (state.counters.knowledgeClicks?.value >= 3 && !updatedUnlocks.applyKnowledge) {
      updatedUnlocks.applyKnowledge = true;
      isUpdated = true;
      console.log('üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (isUpdated) {
      return {
        ...state,
        unlocks: updatedUnlocks
      };
    }
    
    return state;
  }
}
